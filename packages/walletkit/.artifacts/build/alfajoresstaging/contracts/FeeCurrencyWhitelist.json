{
  "contractName": "FeeCurrencyWhitelist",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWhitelist",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWhitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addToken(address)\":{\"details\":\"Add a token to the whitelist\",\"params\":{\"tokenAddress\":\"The address of the token to add.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Holds a whitelist of the ERC20+ tokens that can be used to pay for gas\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol\":\"FeeCurrencyWhitelist\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol\":{\"keccak256\":\"0xeb942631208fd8d2ce606377f9d98682aead106fdf88396641265b125e580edd\",\"urls\":[\"bzzr://bee75b745965205487f26edc999f0772db6a904df3c3dcb3ba745c382d07f708\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xd2732488e07ec27bbb2c343ecb10ad0f76adce402b13b976aee88342be5c11e8\",\"urls\":[\"bzzr://97c9b03aad5c74adb18b6c40e14f2cc22b784a6d8841914e43f7c44e6ee340b7\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"keccak256\":\"0x26dc87b8428f68127aa0418b47771575f9d1671490a13352a5e83f5daea6d3fe\",\"urls\":[\"bzzr://296711f597ff2258628f19d7c0cdb2ba7eea441c3189ef33a645a8762927aec8\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36106b7806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461013c5780638f32d59b14610186578063d01f63f5146101a8578063d48bfca714610207578063f2fde38b1461024b57610093565b8063158ef93e14610098578063715018a6146100ba5780637ebd1b30146100c45780638129fc1c14610132575b600080fd5b6100a061028f565b604051808215151515815260200191505060405180910390f35b6100c26102a2565b005b6100f0600480360360208110156100da57600080fd5b8101908080359060200190929190505050610372565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013a6103ae565b005b6101446103ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018e610417565b604051808215151515815260200191505060405180910390f35b6101b061046e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101f35780820151818401526020810190506101d8565b505050509050019250505060405180910390f35b6102496004803603602081101561021d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104fc565b005b61028d6004803603602081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610576565b005b600060149054906101000a900460ff1681565b6102aa610417565b6102b357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6001818154811061037f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff16156103c857600080fd5b6001600060146101000a81548160ff0219169083151502179055506103ec33610593565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060018054806020026020016040519081016040528092919081815260200182805480156104f257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104a8575b5050505050905090565b610504610417565b61050d57600080fd5b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61057e610417565b61058757600080fd5b61059081610593565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820232cd34e0fd2cb6819e8fbd505e959b3759ab175ad5476d99be92fcd17a8d5d60029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461013c5780638f32d59b14610186578063d01f63f5146101a8578063d48bfca714610207578063f2fde38b1461024b57610093565b8063158ef93e14610098578063715018a6146100ba5780637ebd1b30146100c45780638129fc1c14610132575b600080fd5b6100a061028f565b604051808215151515815260200191505060405180910390f35b6100c26102a2565b005b6100f0600480360360208110156100da57600080fd5b8101908080359060200190929190505050610372565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013a6103ae565b005b6101446103ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018e610417565b604051808215151515815260200191505060405180910390f35b6101b061046e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101f35780820151818401526020810190506101d8565b505050509050019250505060405180910390f35b6102496004803603602081101561021d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104fc565b005b61028d6004803603602081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610576565b005b600060149054906101000a900460ff1681565b6102aa610417565b6102b357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6001818154811061037f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff16156103c857600080fd5b6001600060146101000a81548160ff0219169083151502179055506103ec33610593565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060018054806020026020016040519081016040528092919081815260200182805480156104f257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104a8575b5050505050905090565b610504610417565b61050d57600080fd5b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61057e610417565b61058757600080fd5b61059081610593565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820232cd34e0fd2cb6819e8fbd505e959b3759ab175ad5476d99be92fcd17a8d5d60029",
  "sourceMap": "268:507:5:-;;;524:10:108;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;268:507:5;;;;;;",
  "deployedSourceMap": "268:507:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:507:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52:23:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1423:137:108;;;:::i;:::-;;351:26:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;351:26:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;382:84;;;:::i;:::-;;659:77:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;681:92:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;681:92:5;;;;;;;;;;;;;;;;;579:98;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;579:98:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;1731:107:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:108;;;;;;;;;;;;;;;;;;;:::i;:::-;;52:23:10;;;;;;;;;;;;;:::o;1423:137:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;351:26:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;382:84::-;118:11:10;;;;;;;;;;;117:12;109:21;;;;;;150:4;136:11;;:18;;;;;;;;;;;;;;;;;;431:30:5;450:10;431:18;:30::i;:::-;382:84::o;659:77:108:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;681:92:5:-;728:16;759:9;752:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:92;:::o;579:98::-;863:9:108;:7;:9::i;:::-;855:18;;;;;;644:9:5;659:12;644:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;644:28:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:98;:::o;1731:107:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;1982:183::-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o",
  "source": "pragma solidity ^0.5.3;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./interfaces/IFeeCurrencyWhitelist.sol\";\n\nimport \"../common/Initializable.sol\";\n\n/**\n * @title Holds a whitelist of the ERC20+ tokens that can be used to pay for gas\n */\ncontract FeeCurrencyWhitelist is IFeeCurrencyWhitelist, Ownable, Initializable {\n  address[] public whitelist;\n\n  function initialize() external initializer {\n    _transferOwnership(msg.sender);\n  }\n\n  /**\n   * @dev Add a token to the whitelist\n   * @param tokenAddress The address of the token to add.\n   */\n  function addToken(address tokenAddress) external onlyOwner {\n    whitelist.push(tokenAddress);\n  }\n\n  function getWhitelist() external view returns (address[] memory) {\n    return whitelist;\n  }\n}\n",
  "sourcePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol",
  "ast": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol",
    "exportedSymbols": {
      "FeeCurrencyWhitelist": [
        1279
      ]
    },
    "id": 1280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1232,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1233,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 27897,
        "src": "25:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol",
        "file": "./interfaces/IFeeCurrencyWhitelist.sol",
        "id": 1234,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 5415,
        "src": "90:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 1235,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 3121,
        "src": "140:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1236,
              "name": "IFeeCurrencyWhitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5414,
              "src": "301:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeCurrencyWhitelist_$5414",
                "typeString": "contract IFeeCurrencyWhitelist"
              }
            },
            "id": 1237,
            "nodeType": "InheritanceSpecifier",
            "src": "301:21:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1238,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27896,
              "src": "324:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$27896",
                "typeString": "contract Ownable"
              }
            },
            "id": 1239,
            "nodeType": "InheritanceSpecifier",
            "src": "324:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1240,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3120,
              "src": "333:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3120",
                "typeString": "contract Initializable"
              }
            },
            "id": 1241,
            "nodeType": "InheritanceSpecifier",
            "src": "333:13:5"
          }
        ],
        "contractDependencies": [
          3120,
          5414,
          27896
        ],
        "contractKind": "contract",
        "documentation": "@title Holds a whitelist of the ERC20+ tokens that can be used to pay for gas",
        "fullyImplemented": true,
        "id": 1279,
        "linearizedBaseContracts": [
          1279,
          3120,
          27896,
          5414
        ],
        "name": "FeeCurrencyWhitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1244,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 1279,
            "src": "351:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1242,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "351:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1243,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "351:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1254,
              "nodeType": "Block",
              "src": "425:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28640,
                          "src": "450:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "450:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1249,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27895,
                      "src": "431:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "431:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "431:30:5"
                }
              ]
            },
            "documentation": null,
            "id": 1255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1247,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1246,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3119,
                  "src": "413:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "413:11:5"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:5"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:0:5"
            },
            "scope": 1279,
            "src": "382:84:5",
            "stateMutability": "nonpayable",
            "superFunction": 5402,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1268,
              "nodeType": "Block",
              "src": "638:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1265,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "659:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1262,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "644:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "644:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "644:28:5"
                }
              ]
            },
            "documentation": "@dev Add a token to the whitelist\n@param tokenAddress The address of the token to add.",
            "id": 1269,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1260,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1259,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27830,
                  "src": "628:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "628:9:5"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1257,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "597:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:22:5"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "638:0:5"
            },
            "scope": 1279,
            "src": "579:98:5",
            "stateMutability": "nonpayable",
            "superFunction": 5407,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "746:27:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1275,
                    "name": "whitelist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1244,
                    "src": "759:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1274,
                  "id": 1276,
                  "nodeType": "Return",
                  "src": "752:16:5"
                }
              ]
            },
            "documentation": null,
            "id": 1278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:5"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "728:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1271,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "728:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1272,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "728:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "727:18:5"
            },
            "scope": 1279,
            "src": "681:92:5",
            "stateMutability": "view",
            "superFunction": 5413,
            "visibility": "external"
          }
        ],
        "scope": 1280,
        "src": "268:507:5"
      }
    ],
    "src": "0:776:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol",
    "exportedSymbols": {
      "FeeCurrencyWhitelist": [
        1279
      ]
    },
    "id": 1280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1232,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1233,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 27897,
        "src": "25:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol",
        "file": "./interfaces/IFeeCurrencyWhitelist.sol",
        "id": 1234,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 5415,
        "src": "90:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 1235,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 3121,
        "src": "140:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1236,
              "name": "IFeeCurrencyWhitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5414,
              "src": "301:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeCurrencyWhitelist_$5414",
                "typeString": "contract IFeeCurrencyWhitelist"
              }
            },
            "id": 1237,
            "nodeType": "InheritanceSpecifier",
            "src": "301:21:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1238,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27896,
              "src": "324:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$27896",
                "typeString": "contract Ownable"
              }
            },
            "id": 1239,
            "nodeType": "InheritanceSpecifier",
            "src": "324:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1240,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3120,
              "src": "333:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3120",
                "typeString": "contract Initializable"
              }
            },
            "id": 1241,
            "nodeType": "InheritanceSpecifier",
            "src": "333:13:5"
          }
        ],
        "contractDependencies": [
          3120,
          5414,
          27896
        ],
        "contractKind": "contract",
        "documentation": "@title Holds a whitelist of the ERC20+ tokens that can be used to pay for gas",
        "fullyImplemented": true,
        "id": 1279,
        "linearizedBaseContracts": [
          1279,
          3120,
          27896,
          5414
        ],
        "name": "FeeCurrencyWhitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1244,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 1279,
            "src": "351:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1242,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "351:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1243,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "351:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1254,
              "nodeType": "Block",
              "src": "425:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28640,
                          "src": "450:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "450:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1249,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27895,
                      "src": "431:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "431:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "431:30:5"
                }
              ]
            },
            "documentation": null,
            "id": 1255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1247,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1246,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3119,
                  "src": "413:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "413:11:5"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:5"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:0:5"
            },
            "scope": 1279,
            "src": "382:84:5",
            "stateMutability": "nonpayable",
            "superFunction": 5402,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1268,
              "nodeType": "Block",
              "src": "638:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1265,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "659:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1262,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "644:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "644:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "644:28:5"
                }
              ]
            },
            "documentation": "@dev Add a token to the whitelist\n@param tokenAddress The address of the token to add.",
            "id": 1269,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1260,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1259,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27830,
                  "src": "628:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "628:9:5"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1257,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "597:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:22:5"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "638:0:5"
            },
            "scope": 1279,
            "src": "579:98:5",
            "stateMutability": "nonpayable",
            "superFunction": 5407,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "746:27:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1275,
                    "name": "whitelist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1244,
                    "src": "759:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1274,
                  "id": 1276,
                  "nodeType": "Return",
                  "src": "752:16:5"
                }
              ]
            },
            "documentation": null,
            "id": 1278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:5"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "728:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1271,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "728:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1272,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "728:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "727:18:5"
            },
            "scope": 1279,
            "src": "681:92:5",
            "stateMutability": "view",
            "superFunction": 5413,
            "visibility": "external"
          }
        ],
        "scope": 1280,
        "src": "268:507:5"
      }
    ],
    "src": "0:776:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1101": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xd2e253F9f92E5ffb870E5b4909b503971e0d65D0",
      "transactionHash": "0xc35979a9a33211bb4ba530781efd9c6eb4cd15123103bf40dd7bf94bdbafdd27"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-12-06T00:12:55.141Z",
  "devdoc": {
    "methods": {
      "addToken(address)": {
        "details": "Add a token to the whitelist",
        "params": {
          "tokenAddress": "The address of the token to add."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Holds a whitelist of the ERC20+ tokens that can be used to pay for gas"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}
{
  "contractName": "EpochRewardsTest",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetEpochRewards",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorAddressFromCurrentSet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetVotingYieldParameters",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetTotalEpochPaymentsInGold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetGoldTotalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "max",
          "type": "uint256"
        },
        {
          "name": "adjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "setTargetVotingYieldParameters",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRewardsMultiplierParameters",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "max",
          "type": "uint256"
        },
        {
          "name": "underspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "name": "overspendAdjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "setRewardsMultiplierParameters",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "calculateTargetEpochPaymentAndRewards",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setTargetVotingGoldFraction",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setTargetValidatorEpochPayment",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVotingGoldFraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetVotingGoldFraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "registryAddress",
          "type": "address"
        },
        {
          "name": "targetVotingYieldInitial",
          "type": "uint256"
        },
        {
          "name": "targetVotingYieldMax",
          "type": "uint256"
        },
        {
          "name": "targetVotingYieldAdjustmentFactor",
          "type": "uint256"
        },
        {
          "name": "rewardsMultiplierMax",
          "type": "uint256"
        },
        {
          "name": "rewardsMultiplierUnderspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "name": "rewardsMultiplierOverspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "name": "_targetVotingGoldFraction",
          "type": "uint256"
        },
        {
          "name": "_targetValidatorEpochPayment",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "targetValidatorEpochPayment",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "name": "exponent",
          "type": "uint256"
        },
        {
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "fraction",
          "type": "uint256"
        }
      ],
      "name": "TargetVotingGoldFractionSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "payment",
          "type": "uint256"
        }
      ],
      "name": "TargetValidatorEpochPaymentSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "max",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "adjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "TargetVotingYieldParametersSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "max",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "underspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "overspendAdjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "RewardsMultiplierParametersSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRewardsMultiplier",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "targetGoldTotalSupplyIncrease",
          "type": "uint256"
        }
      ],
      "name": "getRewardsMultiplier",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateTargetVotingYield",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setNumberValidatorsInCurrentSet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getRewardsMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetEpochRewards\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorAddressFromCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetVotingYieldParameters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"blsKey\",\"type\":\"bytes\"},{\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetTotalEpochPaymentsInGold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetGoldTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"max\",\"type\":\"uint256\"},{\"name\":\"adjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"setTargetVotingYieldParameters\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardsMultiplierParameters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"targetGoldTotalSupplyIncrease\",\"type\":\"uint256\"}],\"name\":\"getRewardsMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"max\",\"type\":\"uint256\"},{\"name\":\"underspendAdjustmentFactor\",\"type\":\"uint256\"},{\"name\":\"overspendAdjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"setRewardsMultiplierParameters\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculateTargetEpochPaymentAndRewards\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateTargetVotingYield\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTargetVotingGoldFraction\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTargetValidatorEpochPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVotingGoldFraction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetVotingGoldFraction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"registryAddress\",\"type\":\"address\"},{\"name\":\"targetVotingYieldInitial\",\"type\":\"uint256\"},{\"name\":\"targetVotingYieldMax\",\"type\":\"uint256\"},{\"name\":\"targetVotingYieldAdjustmentFactor\",\"type\":\"uint256\"},{\"name\":\"rewardsMultiplierMax\",\"type\":\"uint256\"},{\"name\":\"rewardsMultiplierUnderspendAdjustmentFactor\",\"type\":\"uint256\"},{\"name\":\"rewardsMultiplierOverspendAdjustmentFactor\",\"type\":\"uint256\"},{\"name\":\"_targetVotingGoldFraction\",\"type\":\"uint256\"},{\"name\":\"_targetValidatorEpochPayment\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setNumberValidatorsInCurrentSet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"targetValidatorEpochPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"name\":\"exponent\",\"type\":\"uint256\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"TargetVotingGoldFractionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"TargetValidatorEpochPaymentSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"max\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"adjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"TargetVotingYieldParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"max\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"underspendAdjustmentFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"overspendAdjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"RewardsMultiplierParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"calculateTargetEpochPaymentAndRewards()\":{\"return\":\"The per validator epoch payment and the total rewards to voters.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"numerator/denominator of the computed quantity (not reduced).\"},\"getEpochSize()\":{\"return\":\"The current epoch size in blocks.\"},\"getRewardsMultiplier()\":{\"return\":\"The rewards multiplier based on the current and target Gold supplies.\"},\"getRewardsMultiplierParameters()\":{\"return\":\"The max multiplier and under/over spend adjustment factors.\"},\"getTargetEpochRewards()\":{\"return\":\"the total target epoch rewards for voters.\"},\"getTargetGoldTotalSupply()\":{\"return\":\"The target Gold supply according to the epoch rewards target schedule.\"},\"getTargetTotalEpochPaymentsInGold()\":{\"return\":\"The total target epoch payments to validators, converted to Gold.\"},\"getTargetVotingGoldFraction()\":{\"return\":\"The percentage of floating Gold voting to target.\"},\"getTargetVotingYieldParameters()\":{\"return\":\"The target, max, and adjustment factor for target voting yield.\"},\"getVotingGoldFraction()\":{\"return\":\"The fraction of floating Gold being used for voting in validator elections.\"},\"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Should be called only once.\",\"params\":{\"_targetValidatorEpochPayment\":\"The target validator epoch payment.\",\"_targetVotingGoldFraction\":\"The percentage of floating Gold voting to target.\",\"registryAddress\":\"The address of the registry contract.\",\"rewardsMultiplierMax\":\"The max multiplier on target epoch rewards.\",\"rewardsMultiplierOverspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch  rewards when the protocol is running ahead of the target Gold supply.\",\"rewardsMultiplierUnderspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch  rewards when the protocol is running behind the target Gold supply.\",\"targetVotingYieldAdjustmentFactor\":\"The target block reward adjustment factor for voters.\",\"targetVotingYieldInitial\":\"The initial relative target block reward for voters.\",\"targetVotingYieldMax\":\"The max relative target block reward for voters.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setRewardsMultiplierParameters(uint256,uint256,uint256)\":{\"params\":{\"max\":\"The max multiplier on target epoch rewards.\",\"overspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch rewards when the  protocol is running ahead of the target Gold supply.\",\"underspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch rewards when the  protocol is running behind the target Gold supply.\"},\"return\":\"True upon success.\"},\"setTargetValidatorEpochPayment(uint256)\":{\"params\":{\"value\":\"The value in Celo Dollars.\"},\"return\":\"True upon success.\"},\"setTargetVotingGoldFraction(uint256)\":{\"params\":{\"value\":\"The percentage of floating Gold voting to target.\"},\"return\":\"True upon success.\"},\"setTargetVotingYieldParameters(uint256,uint256)\":{\"params\":{\"adjustmentFactor\":\"The target block reward adjustment factor for voters.\",\"max\":\"The max relative target block reward for voters.\"},\"return\":\"True upon success.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"validatorAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set as sorted by the election.\"},\"return\":\"Address of validator at the requested index.\"}},\"title\":\"A wrapper around EpochRewards that exposes internal functions for testing.\"},\"userdoc\":{\"methods\":{\"calculateTargetEpochPaymentAndRewards()\":{\"notice\":\"Calculates the per validator epoch payment and the total rewards to voters.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getRewardsMultiplier()\":{\"notice\":\"Returns the rewards multiplier based on the current and target Gold supplies.\"},\"getRewardsMultiplierParameters()\":{\"notice\":\"Returns the rewards multiplier parameters.\"},\"getTargetEpochRewards()\":{\"notice\":\"Returns the total target epoch rewards for voters.\"},\"getTargetGoldTotalSupply()\":{\"notice\":\"Returns the target Gold supply according to the epoch rewards target schedule.\"},\"getTargetTotalEpochPaymentsInGold()\":{\"notice\":\"Returns the total target epoch payments to validators, converted to Gold.\"},\"getTargetVotingGoldFraction()\":{\"notice\":\"Returns the target voting Gold fraction.\"},\"getTargetVotingYieldParameters()\":{\"notice\":\"Returns the target voting yield parameters.\"},\"getVotingGoldFraction()\":{\"notice\":\"Returns the fraction of floating Gold being used for voting in validator elections.\"},\"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Initializes critical variables.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setRewardsMultiplierParameters(uint256,uint256,uint256)\":{\"notice\":\"Sets the rewards multiplier parameters.\"},\"setTargetValidatorEpochPayment(uint256)\":{\"notice\":\"Sets the target per-epoch payment in Celo Dollars for validators.\"},\"setTargetVotingGoldFraction(uint256)\":{\"notice\":\"Sets the target voting Gold fraction.\"},\"setTargetVotingYieldParameters(uint256,uint256)\":{\"notice\":\"Sets the target voting yield parameters.\"},\"validatorAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator address from the current validator set.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol\":\"EpochRewardsTest\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/FixidityLib.sol\":{\"keccak256\":\"0xb3e459e74b9ecee3af7522aeca89ac11af936462c0c8c5b8c68bde48c79fc4fe\",\"urls\":[\"bzzr://0885a4e138af8fde4522564718424978f5554ad76526ff5a550e5bd8d5f23efa\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xd2732488e07ec27bbb2c343ecb10ad0f76adce402b13b976aee88342be5c11e8\",\"urls\":[\"bzzr://97c9b03aad5c74adb18b6c40e14f2cc22b784a6d8841914e43f7c44e6ee340b7\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/UsingPrecompiles.sol\":{\"keccak256\":\"0xea54e491c3bec0ddd7974af7661a207f2f50bf1cc5a5dcf56a1f5625e528dab9\",\"urls\":[\"bzzr://ce2907c68dd1e637b54f9d0b505764a06788e0420915bfdff4231bb9bf9239a8\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/UsingRegistry.sol\":{\"keccak256\":\"0xf07cbaf66b93cb36da6febcf2213aa12200233e29cb6241592e44fc0435ff330\",\"urls\":[\"bzzr://8f0587ddbc09bc24acdb9c7c7ed5217027f8852f683d3a484ea65ee8baecd127\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IAccounts.sol\":{\"keccak256\":\"0xa33411d56c4947d725230554ae99dc9eb54f99a7e45f9ab2ce1769de831db704\",\"urls\":[\"bzzr://c18e9b9fb9c63b9283d43770495fabd87f8b91c88f458a04050192f086057ba5\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IERC20Token.sol\":{\"keccak256\":\"0xdf46d738d4b2f969ebdcdbe286468cce154332d7da350cad7f14b26093477fe0\",\"urls\":[\"bzzr://e72d3c7054c7a24f7fd6680ad9ec31787781128b0c0fde67dbdca454ef854ed5\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IRegistry.sol\":{\"keccak256\":\"0xaaa0744e02eb6e463e0c50ca04f7a48bf8957b8782b17a15eac3bb41b6c05838\",\"urls\":[\"bzzr://d43b6f5a99fd62fdbd0978d11f20784e45b2dc288f2beaecb23a3b6e67a5867e\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/EpochRewards.sol\":{\"keccak256\":\"0xc37a2ae25a0aa88ba64f9683835e486d04767180e0d9bedea3f8f762518ca980\",\"urls\":[\"bzzr://3fa9bd55a5f8bc08febc6594be50c7ba83aeb5bfb3ef66f2cb9a6226ca1e4ce7\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/interfaces/IElection.sol\":{\"keccak256\":\"0x20c69e707b45bf26399307c5262cf5fada143e16b11d1da3c68a5148ce21a77a\",\"urls\":[\"bzzr://3a54599516b340ae92fc71c19e2061bec8db98e3e32d9b450077bfe37a2df603\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/interfaces/IGovernance.sol\":{\"keccak256\":\"0x585e6c90b0275e4115e4f34f80765119e0ab547dae6a87f905c9f87d2e6730d5\",\"urls\":[\"bzzr://d30bfcc72d46bcc87fd2cb9061a73fcc342bea9957630572d5e909fa7e1fb6b9\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/interfaces/ILockedGold.sol\":{\"keccak256\":\"0xa4ce26b43a38d2287642f73c51107d259a9b890473c04bca5042acf9b58d9e6d\",\"urls\":[\"bzzr://84d725bcb53e27d9b3eab620f4f37c0a82c581e2522c63707d6151dec50aa81e\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/interfaces/IValidators.sol\":{\"keccak256\":\"0x900b6ee82a7da224d7f32c0ef963f4119967de4ffaf502191e9941a0b7d661ef\",\"urls\":[\"bzzr://8b153edb192d10993caca96653bb109bc61fe3995aa76fbf20f1175e8ec1e008\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol\":{\"keccak256\":\"0xb8b829acac48f5ae14825649c781f67af8ad9202c7bba01918aa9ae6304a936b\",\"urls\":[\"bzzr://26ce64b1b92f368390d1929d1ede5935959116ba3f7eec2859bf0761ef0277d3\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xf8470783201987bcae377bb928d7c632cac43f9eb971693d0c5db9b533853a6a\",\"urls\":[\"bzzr://f1452cc34aa553ae029634ff7c1a4a1a8765b249b321fab547093d794a6fc805\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/stability/interfaces/ISortedOracles.sol\":{\"keccak256\":\"0x1950acc8547925f5ddba6aea7a31e017320e52f377f2d40311f88862a95824d8\",\"urls\":[\"bzzr://a8ad439e9d795ff30581e199b2f06264e974ab34491b4bf1e0a19c17f6b1ffc9\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/stability/interfaces/IStableToken.sol\":{\"keccak256\":\"0xc0255a8b40e9b769dd1590bb8bf47240f4203cafd2a44e1b1feab6a437c0608e\",\"urls\":[\"bzzr://42755e25900877d449ce12b5eea706e16c39136d583772aa7c1e5ad775fb06c5\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600255336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3612b7e806100d46000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80638aaf69941161010f578063a91ee0dc116100a2578063df4da46111610071578063df4da461146108e3578063e185aaa814610901578063ec6830721461091f578063f2fde38b1461099a576101f0565b8063a91ee0dc146107be578063ae098de214610802578063d114e6fc14610820578063d632994c146108b5576101f0565b806394028384116100de57806394028384146106f657806396c3d2fd1461073c5780639a7b3be714610782578063a1b95962146107a0576101f0565b80638aaf69941461065b5780638da5cb5b146106805780638f32d59b146106ca57806392ecd745146106ec576101f0565b80635918bb581161018757806378e979251161015657806378e979251461057b5780637b103999146105995780638331c1d7146105e357806387ee8a0f1461063d576101f0565b80635918bb58146104b35780635f396e4814610503578063715018a61461052f57806376d92bd214610539576101f0565b8063171af90f116101c3578063171af90f146102c157806323f0ab65146102ed5780634901c725146104775780635049890f14610495576101f0565b80630203ab24146101f5578063118beff11461021357806311fb9e8414610231578063158ef93e1461029f575b600080fd5b6101fd6109de565b6040518082815260200191505060405180910390f35b61021b610a27565b6040518082815260200191505060405180910390f35b61025d6004803603602081101561024757600080fd5b8101908080359060200190929190505050610af1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a7610b21565b604051808215151515815260200191505060405180910390f35b6102c9610b34565b60405180848152602001838152602001828152602001935050505060405180910390f35b61045d6004803603606081101561030357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103d757600080fd5b8201836020820111156103e957600080fd5b8035906020019184600183028401116401000000008311171561040b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bad565b604051808215151515815260200191505060405180910390f35b61047f610d6d565b6040518082815260200191505060405180910390f35b61049d610f7d565b6040518082815260200191505060405180910390f35b6104e9600480360360408110156104c957600080fd5b81019080803590602001909291908035906020019092919050505061105b565b604051808215151515815260200191505060405180910390f35b61050b6111cf565b60405180848152602001838152602001828152602001935050505060405180910390f35b61053761124e565b005b6105656004803603602081101561054f57600080fd5b810190808035906020019092919050505061131e565b6040518082815260200191505060405180910390f35b610583611338565b6040518082815260200191505060405180910390f35b6105a161133e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610623600480360360608110156105f957600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611364565b604051808215151515815260200191505060405180910390f35b6106456114e5565b6040518082815260200191505060405180910390f35b6106636114ef565b604051808381526020018281526020019250505060405180910390f35b610688611588565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106d26115b1565b604051808215151515815260200191505060405180910390f35b6106f4611608565b005b6107226004803603602081101561070c57600080fd5b8101908080359060200190929190505050611612565b604051808215151515815260200191505060405180910390f35b6107686004803603602081101561075257600080fd5b81019080803590602001909291905050506116c2565b604051808215151515815260200191505060405180910390f35b61078a61172b565b6040518082815260200191505060405180910390f35b6107a8611767565b6040518082815260200191505060405180910390f35b610800600480360360208110156107d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119d4565b005b61080a611a6c565b6040518082815260200191505060405180910390f35b6108b3600480360361012081101561083757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611a92565b005b6108e1600480360360208110156108cb57600080fd5b8101908080359060200190929190505050611b31565b005b6108eb611b3b565b6040518082815260200191505060405180910390f35b610909611b66565b6040518082815260200191505060405180910390f35b61097d600480360360c081101561093557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611b6c565b604051808381526020018281526020019250505060405180910390f35b6109dc600480360360208110156109b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c07565b005b6000806109e9610a27565b905060006109f5610d6d565b90506000610a0c8284611c2490919063ffffffff16565b9050610a1f610a1a82611c43565b611f48565b935050505090565b6000610aec610ae76006600001604051806020016040529081600082015481525050610ad9610a54611f56565b73ffffffffffffffffffffffffffffffffffffffff16631f6042436040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9957600080fd5b505afa158015610aad573d6000803e3d6000fd5b505050506040513d6020811015610ac357600080fd5b8101908080519060200190929190505050612051565b61208f90919063ffffffff16565b6122e1565b905090565b60008060405183815260008060208360fa611388fa60206000604084013e60408201519250505080915050919050565b600060149054906101000a900460ff1681565b60008060008060069050610b5f81600001604051806020016040529081600082015481525050611f48565b610b8082600201604051806020016040529081600082015481525050611f48565b610ba183600101604051806020016040529081600082015481525050611f48565b93509350935050909192565b60008060fb73ffffffffffffffffffffffffffffffffffffffff1660005a90878787604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610c3a5780518252602082019150602081019050602083039250610c17565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610c8b5780518252602082019150602081019050602083039250610c68565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610cf45780518252602082019150602081019050602083039250610cd1565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381858888f193505050503d8060008114610d57576040519150601f19603f3d011682016040523d82523d6000602084013e610d5c565b606091505b505080915050809150509392505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f537461626c65546f6b656e000000000000000000000000000000000000000000815250600b019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610e2957600080fd5b505afa158015610e3d573d6000803e3d6000fd5b505050506040513d6020811015610e5357600080fd5b81019080805190602001909291905050509050600080610e71612302565b73ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015610eec57600080fd5b505afa158015610f00573d6000803e3d6000fd5b505050506040513d6040811015610f1657600080fd5b81019080805190602001909291908051906020019092919050505091509150610f7582610f6783610f59600a54610f4b6114e5565b6123fd90919063ffffffff16565b6123fd90919063ffffffff16565b61243790919063ffffffff16565b935050505090565b600080610f956002544261245d90919063ffffffff16565b90506201518061016d600f0202811015611047576000610fe96002610fdb6b01f04ef12cb04cf1580000006b033b2e3c9fd0803ce800000061245d90919063ffffffff16565b61243790919063ffffffff16565b9050600061101c6201518061016d600f020261100e85856123fd90919063ffffffff16565b61243790919063ffffffff16565b905061103d6b01f04ef12cb04cf15800000082611c2490919063ffffffff16565b9350505050611058565b600061105257600080fd5b60009150505b90565b60006110656115b1565b61106e57600080fd5b6110906006600201604051806020016040529081600082015481525050611f48565b831415806110bf57506110bb6006600101604051806020016040529081600082015481525050611f48565b8214155b6110c857600080fd5b6110d18361247d565b6006600201600082015181600001559050506110ec8261247d565b60066001016000820151816000015590505061113161110961249b565b60066002016040518060200160405290816000820154815250506124c190919063ffffffff16565b611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612b24602f913960400191505060405180910390fd5b7f1b76e38f3fdd1f284ed4d47c9d50ff407748c516ff9761616ff638c2331076258383604051808381526020018281526020019250505060405180910390a16001905092915050565b600080600080600390506111fa81600201604051806020016040529081600082015481525050611f48565b61121e82600001600001604051806020016040529081600082015481525050611f48565b61124283600001600101604051806020016040529081600082015481525050611f48565b93509350935050909192565b6112566115b1565b61125f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061133161132c83611c43565b611f48565b9050919050565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061136e6115b1565b61137757600080fd5b6113996003600201604051806020016040529081600082015481525050611f48565b841415806113cb57506113c76003600001600101604051806020016040529081600082015481525050611f48565b8214155b806113fa57506113f66003600001600001604051806020016040529081600082015481525050611f48565b8314155b61140357600080fd5b604051806040016040528060405180604001604052806114228761247d565b81526020016114308661247d565b81525081526020016114418661247d565b815250600360008201518160000160008201518160000160008201518160000155505060208201518160010160008201518160000155505050506020820151816002016000820151816000015550509050507f191445ee0115396c9725b9c642b985d63820ca57d54e42e5eb38faec4022f05d84848460405180848152602001838152602001828152602001935050505060405180910390a1600190509392505050565b6000600b54905090565b60008060006114fc610a27565b90506000611508610d6d565b9050600061151f8284611c2490919063ffffffff16565b9050611529612b10565b61153282611c43565b905061155961155482611546600a54612051565b61208f90919063ffffffff16565b6122e1565b61157c6115778361156988612051565b61208f90919063ffffffff16565b6122e1565b95509550505050509091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6116106124d6565b565b600061161c6115b1565b61162557600080fd5b6116446009604051806020016040529081600082015481525050611f48565b8214158015611661575061165e61165961249b565b611f48565b82105b61166a57600080fd5b6116738261247d565b6009600082015181600001559050507fbae2f33c70949fbc7325c98655f3039e5e1c7f774874c99fd4f31ec5f432b159826040518082815260200191505060405180910390a160019050919050565b60006116cc6115b1565b6116d557600080fd5b600a548214156116e457600080fd5b81600a819055507fa21d141963bb2c1064b5376f762d22d3e9c4c51617edcf105bcec0f14e36800c826040518082815260200191505060405180910390a160019050919050565b600080611736611b3b565b9050600081438161174357fe5b049050600082438161175157fe5b06141561175f576001810390505b809250505090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561182357600080fd5b505afa158015611837573d6000803e3d6000fd5b505050506040513d602081101561184d57600080fd5b8101908080519060200190929190505050905060006119138273ffffffffffffffffffffffffffffffffffffffff163161188561275d565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118ca57600080fd5b505afa1580156118de573d6000803e3d6000fd5b505050506040513d60208110156118f457600080fd5b810190808051906020019092919050505061245d90919063ffffffff16565b9050600061191f611f56565b73ffffffffffffffffffffffffffffffffffffffff16639a0e7d666040518163ffffffff1660e01b815260040160206040518083038186803b15801561196457600080fd5b505afa158015611978573d6000803e3d6000fd5b505050506040513d602081101561198e57600080fd5b810190808051906020019092919050505090506119cc6119c76119b084612051565b6119b984612051565b61285890919063ffffffff16565b611f48565b935050505090565b6119dc6115b1565b6119e557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6000611a8d6009604051806020016040529081600082015481525050611f48565b905090565b600060149054906101000a900460ff1615611aac57600080fd5b6001600060146101000a81548160ff021916908315150217905550611ad0336128cf565b611ad9896119d4565b611ae3878761105b565b50611aef858585611364565b50611af982611612565b50611b03816116c2565b50611b0d8861247d565b60066000016000820151816000015590505042600281905550505050505050505050565b80600b8190555050565b60008060405160008060008360f86103e8fa60206000602084013e6020820151925050508091505090565b600a5481565b60008060008714158015611b81575060008514155b611b8a57600080fd5b6000806040513681016040528a81528960208201528860408201528760608201528660808201528560a082015260008060c48360fc61041afa3d604051818101604052816000823e8260008114611beb578151965060208201519550611bef565b8282fd5b50505050508181935093505050965096945050505050565b611c0f6115b1565b611c1857600080fd5b611c21816128cf565b50565b600080828401905083811015611c3957600080fd5b8091505092915050565b611c4b612b10565b6000611c55610f7d565b90506000611c6161275d565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d6020811015611cd057600080fd5b810190808051906020019092919050505090506000611d16611cfb8684611c2490919063ffffffff16565b6b033b2e3c9fd0803ce800000061245d90919063ffffffff16565b90506000611d39846b033b2e3c9fd0803ce800000061245d90919063ffffffff16565b9050611d43612b10565b611d66611d4f83612051565b611d5885612051565b61285890919063ffffffff16565b9050611d82611d7361249b565b826129c790919063ffffffff16565b15611e6557611d8f612b10565b611dd76003600001600001604051806020016040529081600082015481525050611dc9611dba61249b565b856129dc90919063ffffffff16565b61208f90919063ffffffff16565b9050611de1612b10565b611dfb82611ded61249b565b612a1a90919063ffffffff16565b9050611e296003600201604051806020016040529081600082015481525050826124c190919063ffffffff16565b15611e3d5780975050505050505050611f43565b6003600201604051806020016040529081600082015481525050975050505050505050611f43565b611e7f611e7061249b565b826124c190919063ffffffff16565b15611f3357611e8c612b10565b611ed46003600001600101604051806020016040529081600082015481525050611ec684611eb861249b565b6129dc90919063ffffffff16565b61208f90919063ffffffff16565b9050611ef0611ee161249b565b826124c190919063ffffffff16565b15611f1c57611f0f81611f0161249b565b6129dc90919063ffffffff16565b9650505050505050611f43565b611f26600061247d565b9650505050505050611f43565b611f3b61249b565b955050505050505b919050565b600081600001519050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f456c656374696f6e0000000000000000000000000000000000000000000000008152506008019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561201157600080fd5b505afa158015612025573d6000803e3d6000fd5b505050506040513d602081101561203b57600080fd5b8101908080519060200190929190505050905090565b612059612b10565b612061612a5a565b82111561206d57600080fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612097612b10565b6000836000015114806120ae575060008260000151145b156120ca576040518060200160405280600081525090506122db565b69d3c21bcecceda1000000826000015114156120e8578290506122db565b69d3c21bcecceda100000083600001511415612106578190506122db565b600069d3c21bcecceda100000061211c85612a79565b600001518161212757fe5b049050600061213585612ab0565b600001519050600069d3c21bcecceda100000061215186612a79565b600001518161215c57fe5b049050600061216a86612ab0565b6000015190506000828502905060008514612195578285828161218957fe5b041461219457600080fd5b5b600069d3c21bcecceda100000082029050600082146121ce5769d3c21bcecceda10000008282816121c257fe5b04146121cd57600080fd5b5b80915060008486029050600086146121f657848682816121ea57fe5b04146121f557600080fd5b5b600084880290506000881461221b578488828161220f57fe5b041461221a57600080fd5b5b612223612aed565b878161222b57fe5b049650612236612aed565b858161223e57fe5b0494506000858802905060008814612266578588828161225a57fe5b041461226557600080fd5b5b61226e612b10565b604051806020016040528087815250905061229781604051806020016040528087815250612a1a565b90506122b181604051806020016040528086815250612a1a565b90506122cb81604051806020016040528085815250612a1a565b9050809a50505050505050505050505b92915050565b600069d3c21bcecceda10000008260000151816122fa57fe5b049050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156123bd57600080fd5b505afa1580156123d1573d6000803e3d6000fd5b505050506040513d60208110156123e757600080fd5b8101908080519060200190929190505050905090565b6000808314156124105760009050612431565b600082840290508284828161242157fe5b041461242c57600080fd5b809150505b92915050565b600080821161244557600080fd5b600082848161245057fe5b0490508091505092915050565b60008282111561246c57600080fd5b600082840390508091505092915050565b612485612b10565b6040518060200160405280838152509050919050565b6124a3612b10565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b6124de612b10565b6124ee6124e9611767565b61247d565b90506125196009604051806020016040529081600082015481525050826129c790919063ffffffff16565b1561261f57612526612b10565b61254f6009604051806020016040529081600082015481525050836129dc90919063ffffffff16565b9050612559612b10565b61258560066001016040518060200160405290816000820154815250508361208f90919063ffffffff16565b90506125b3600660000160405180602001604052908160008201548152505082612afa90919063ffffffff16565b156125d9576125c26000612051565b600660000160008201518160000155905050612618565b6126058160066000016040518060200160405290816000820154815250506129dc90919063ffffffff16565b6006600001600082015181600001559050505b505061275a565b6126486009604051806020016040529081600082015481525050826124c190919063ffffffff16565b1561275957612655612b10565b61267e8260096040518060200160405290816000820154815250506129dc90919063ffffffff16565b9050612688612b10565b6126b460066001016040518060200160405290816000820154815250508361208f90919063ffffffff16565b90506126e2816006600001604051806020016040529081600082015481525050612a1a90919063ffffffff16565b600660000160008201518160000155905050612739600660020160405180602001604052908160008201548152505060066000016040518060200160405290816000820154815250506129c790919063ffffffff16565b156127565760066002016006600001600082015481600001559050505b50505b5b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561281857600080fd5b505afa15801561282c573d6000803e3d6000fd5b505050506040513d602081101561284257600080fd5b8101908080519060200190929190505050905090565b612860612b10565b60008260000151141561287257600080fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda1000000828161289f57fe5b04146128aa57600080fd5b6040518060200160405280846000015183816128c257fe5b0481525091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561290957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160000151836000015111905092915050565b6129e4612b10565b8160000151836000015110156129f957600080fd5b60405180602001604052808360000151856000015103815250905092915050565b612a22612b10565b6000826000015184600001510190508360000151811015612a4257600080fd5b60405180602001604052808281525091505092915050565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b612a81612b10565b604051806020016040528069d3c21bcecceda100000080856000015181612aa457fe5b04028152509050919050565b612ab8612b10565b604051806020016040528069d3c21bcecceda100000080856000015181612adb57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6000816000015183600001511015905092915050565b604051806020016040528060008152509056fe4d61782074617267657420766f74696e67207969656c64206d757374206265206c6f776572207468616e2031303025a165627a7a723058202cc3bcd667daee46d90304edb08eb305ae38cd5a0f12b5676266d16e441ec34e0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80638aaf69941161010f578063a91ee0dc116100a2578063df4da46111610071578063df4da461146108e3578063e185aaa814610901578063ec6830721461091f578063f2fde38b1461099a576101f0565b8063a91ee0dc146107be578063ae098de214610802578063d114e6fc14610820578063d632994c146108b5576101f0565b806394028384116100de57806394028384146106f657806396c3d2fd1461073c5780639a7b3be714610782578063a1b95962146107a0576101f0565b80638aaf69941461065b5780638da5cb5b146106805780638f32d59b146106ca57806392ecd745146106ec576101f0565b80635918bb581161018757806378e979251161015657806378e979251461057b5780637b103999146105995780638331c1d7146105e357806387ee8a0f1461063d576101f0565b80635918bb58146104b35780635f396e4814610503578063715018a61461052f57806376d92bd214610539576101f0565b8063171af90f116101c3578063171af90f146102c157806323f0ab65146102ed5780634901c725146104775780635049890f14610495576101f0565b80630203ab24146101f5578063118beff11461021357806311fb9e8414610231578063158ef93e1461029f575b600080fd5b6101fd6109de565b6040518082815260200191505060405180910390f35b61021b610a27565b6040518082815260200191505060405180910390f35b61025d6004803603602081101561024757600080fd5b8101908080359060200190929190505050610af1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a7610b21565b604051808215151515815260200191505060405180910390f35b6102c9610b34565b60405180848152602001838152602001828152602001935050505060405180910390f35b61045d6004803603606081101561030357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103d757600080fd5b8201836020820111156103e957600080fd5b8035906020019184600183028401116401000000008311171561040b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bad565b604051808215151515815260200191505060405180910390f35b61047f610d6d565b6040518082815260200191505060405180910390f35b61049d610f7d565b6040518082815260200191505060405180910390f35b6104e9600480360360408110156104c957600080fd5b81019080803590602001909291908035906020019092919050505061105b565b604051808215151515815260200191505060405180910390f35b61050b6111cf565b60405180848152602001838152602001828152602001935050505060405180910390f35b61053761124e565b005b6105656004803603602081101561054f57600080fd5b810190808035906020019092919050505061131e565b6040518082815260200191505060405180910390f35b610583611338565b6040518082815260200191505060405180910390f35b6105a161133e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610623600480360360608110156105f957600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611364565b604051808215151515815260200191505060405180910390f35b6106456114e5565b6040518082815260200191505060405180910390f35b6106636114ef565b604051808381526020018281526020019250505060405180910390f35b610688611588565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106d26115b1565b604051808215151515815260200191505060405180910390f35b6106f4611608565b005b6107226004803603602081101561070c57600080fd5b8101908080359060200190929190505050611612565b604051808215151515815260200191505060405180910390f35b6107686004803603602081101561075257600080fd5b81019080803590602001909291905050506116c2565b604051808215151515815260200191505060405180910390f35b61078a61172b565b6040518082815260200191505060405180910390f35b6107a8611767565b6040518082815260200191505060405180910390f35b610800600480360360208110156107d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119d4565b005b61080a611a6c565b6040518082815260200191505060405180910390f35b6108b3600480360361012081101561083757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611a92565b005b6108e1600480360360208110156108cb57600080fd5b8101908080359060200190929190505050611b31565b005b6108eb611b3b565b6040518082815260200191505060405180910390f35b610909611b66565b6040518082815260200191505060405180910390f35b61097d600480360360c081101561093557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611b6c565b604051808381526020018281526020019250505060405180910390f35b6109dc600480360360208110156109b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c07565b005b6000806109e9610a27565b905060006109f5610d6d565b90506000610a0c8284611c2490919063ffffffff16565b9050610a1f610a1a82611c43565b611f48565b935050505090565b6000610aec610ae76006600001604051806020016040529081600082015481525050610ad9610a54611f56565b73ffffffffffffffffffffffffffffffffffffffff16631f6042436040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9957600080fd5b505afa158015610aad573d6000803e3d6000fd5b505050506040513d6020811015610ac357600080fd5b8101908080519060200190929190505050612051565b61208f90919063ffffffff16565b6122e1565b905090565b60008060405183815260008060208360fa611388fa60206000604084013e60408201519250505080915050919050565b600060149054906101000a900460ff1681565b60008060008060069050610b5f81600001604051806020016040529081600082015481525050611f48565b610b8082600201604051806020016040529081600082015481525050611f48565b610ba183600101604051806020016040529081600082015481525050611f48565b93509350935050909192565b60008060fb73ffffffffffffffffffffffffffffffffffffffff1660005a90878787604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610c3a5780518252602082019150602081019050602083039250610c17565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610c8b5780518252602082019150602081019050602083039250610c68565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610cf45780518252602082019150602081019050602083039250610cd1565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381858888f193505050503d8060008114610d57576040519150601f19603f3d011682016040523d82523d6000602084013e610d5c565b606091505b505080915050809150509392505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f537461626c65546f6b656e000000000000000000000000000000000000000000815250600b019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610e2957600080fd5b505afa158015610e3d573d6000803e3d6000fd5b505050506040513d6020811015610e5357600080fd5b81019080805190602001909291905050509050600080610e71612302565b73ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015610eec57600080fd5b505afa158015610f00573d6000803e3d6000fd5b505050506040513d6040811015610f1657600080fd5b81019080805190602001909291908051906020019092919050505091509150610f7582610f6783610f59600a54610f4b6114e5565b6123fd90919063ffffffff16565b6123fd90919063ffffffff16565b61243790919063ffffffff16565b935050505090565b600080610f956002544261245d90919063ffffffff16565b90506201518061016d600f0202811015611047576000610fe96002610fdb6b01f04ef12cb04cf1580000006b033b2e3c9fd0803ce800000061245d90919063ffffffff16565b61243790919063ffffffff16565b9050600061101c6201518061016d600f020261100e85856123fd90919063ffffffff16565b61243790919063ffffffff16565b905061103d6b01f04ef12cb04cf15800000082611c2490919063ffffffff16565b9350505050611058565b600061105257600080fd5b60009150505b90565b60006110656115b1565b61106e57600080fd5b6110906006600201604051806020016040529081600082015481525050611f48565b831415806110bf57506110bb6006600101604051806020016040529081600082015481525050611f48565b8214155b6110c857600080fd5b6110d18361247d565b6006600201600082015181600001559050506110ec8261247d565b60066001016000820151816000015590505061113161110961249b565b60066002016040518060200160405290816000820154815250506124c190919063ffffffff16565b611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612b24602f913960400191505060405180910390fd5b7f1b76e38f3fdd1f284ed4d47c9d50ff407748c516ff9761616ff638c2331076258383604051808381526020018281526020019250505060405180910390a16001905092915050565b600080600080600390506111fa81600201604051806020016040529081600082015481525050611f48565b61121e82600001600001604051806020016040529081600082015481525050611f48565b61124283600001600101604051806020016040529081600082015481525050611f48565b93509350935050909192565b6112566115b1565b61125f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061133161132c83611c43565b611f48565b9050919050565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061136e6115b1565b61137757600080fd5b6113996003600201604051806020016040529081600082015481525050611f48565b841415806113cb57506113c76003600001600101604051806020016040529081600082015481525050611f48565b8214155b806113fa57506113f66003600001600001604051806020016040529081600082015481525050611f48565b8314155b61140357600080fd5b604051806040016040528060405180604001604052806114228761247d565b81526020016114308661247d565b81525081526020016114418661247d565b815250600360008201518160000160008201518160000160008201518160000155505060208201518160010160008201518160000155505050506020820151816002016000820151816000015550509050507f191445ee0115396c9725b9c642b985d63820ca57d54e42e5eb38faec4022f05d84848460405180848152602001838152602001828152602001935050505060405180910390a1600190509392505050565b6000600b54905090565b60008060006114fc610a27565b90506000611508610d6d565b9050600061151f8284611c2490919063ffffffff16565b9050611529612b10565b61153282611c43565b905061155961155482611546600a54612051565b61208f90919063ffffffff16565b6122e1565b61157c6115778361156988612051565b61208f90919063ffffffff16565b6122e1565b95509550505050509091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6116106124d6565b565b600061161c6115b1565b61162557600080fd5b6116446009604051806020016040529081600082015481525050611f48565b8214158015611661575061165e61165961249b565b611f48565b82105b61166a57600080fd5b6116738261247d565b6009600082015181600001559050507fbae2f33c70949fbc7325c98655f3039e5e1c7f774874c99fd4f31ec5f432b159826040518082815260200191505060405180910390a160019050919050565b60006116cc6115b1565b6116d557600080fd5b600a548214156116e457600080fd5b81600a819055507fa21d141963bb2c1064b5376f762d22d3e9c4c51617edcf105bcec0f14e36800c826040518082815260200191505060405180910390a160019050919050565b600080611736611b3b565b9050600081438161174357fe5b049050600082438161175157fe5b06141561175f576001810390505b809250505090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561182357600080fd5b505afa158015611837573d6000803e3d6000fd5b505050506040513d602081101561184d57600080fd5b8101908080519060200190929190505050905060006119138273ffffffffffffffffffffffffffffffffffffffff163161188561275d565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118ca57600080fd5b505afa1580156118de573d6000803e3d6000fd5b505050506040513d60208110156118f457600080fd5b810190808051906020019092919050505061245d90919063ffffffff16565b9050600061191f611f56565b73ffffffffffffffffffffffffffffffffffffffff16639a0e7d666040518163ffffffff1660e01b815260040160206040518083038186803b15801561196457600080fd5b505afa158015611978573d6000803e3d6000fd5b505050506040513d602081101561198e57600080fd5b810190808051906020019092919050505090506119cc6119c76119b084612051565b6119b984612051565b61285890919063ffffffff16565b611f48565b935050505090565b6119dc6115b1565b6119e557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6000611a8d6009604051806020016040529081600082015481525050611f48565b905090565b600060149054906101000a900460ff1615611aac57600080fd5b6001600060146101000a81548160ff021916908315150217905550611ad0336128cf565b611ad9896119d4565b611ae3878761105b565b50611aef858585611364565b50611af982611612565b50611b03816116c2565b50611b0d8861247d565b60066000016000820151816000015590505042600281905550505050505050505050565b80600b8190555050565b60008060405160008060008360f86103e8fa60206000602084013e6020820151925050508091505090565b600a5481565b60008060008714158015611b81575060008514155b611b8a57600080fd5b6000806040513681016040528a81528960208201528860408201528760608201528660808201528560a082015260008060c48360fc61041afa3d604051818101604052816000823e8260008114611beb578151965060208201519550611bef565b8282fd5b50505050508181935093505050965096945050505050565b611c0f6115b1565b611c1857600080fd5b611c21816128cf565b50565b600080828401905083811015611c3957600080fd5b8091505092915050565b611c4b612b10565b6000611c55610f7d565b90506000611c6161275d565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d6020811015611cd057600080fd5b810190808051906020019092919050505090506000611d16611cfb8684611c2490919063ffffffff16565b6b033b2e3c9fd0803ce800000061245d90919063ffffffff16565b90506000611d39846b033b2e3c9fd0803ce800000061245d90919063ffffffff16565b9050611d43612b10565b611d66611d4f83612051565b611d5885612051565b61285890919063ffffffff16565b9050611d82611d7361249b565b826129c790919063ffffffff16565b15611e6557611d8f612b10565b611dd76003600001600001604051806020016040529081600082015481525050611dc9611dba61249b565b856129dc90919063ffffffff16565b61208f90919063ffffffff16565b9050611de1612b10565b611dfb82611ded61249b565b612a1a90919063ffffffff16565b9050611e296003600201604051806020016040529081600082015481525050826124c190919063ffffffff16565b15611e3d5780975050505050505050611f43565b6003600201604051806020016040529081600082015481525050975050505050505050611f43565b611e7f611e7061249b565b826124c190919063ffffffff16565b15611f3357611e8c612b10565b611ed46003600001600101604051806020016040529081600082015481525050611ec684611eb861249b565b6129dc90919063ffffffff16565b61208f90919063ffffffff16565b9050611ef0611ee161249b565b826124c190919063ffffffff16565b15611f1c57611f0f81611f0161249b565b6129dc90919063ffffffff16565b9650505050505050611f43565b611f26600061247d565b9650505050505050611f43565b611f3b61249b565b955050505050505b919050565b600081600001519050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f456c656374696f6e0000000000000000000000000000000000000000000000008152506008019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561201157600080fd5b505afa158015612025573d6000803e3d6000fd5b505050506040513d602081101561203b57600080fd5b8101908080519060200190929190505050905090565b612059612b10565b612061612a5a565b82111561206d57600080fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612097612b10565b6000836000015114806120ae575060008260000151145b156120ca576040518060200160405280600081525090506122db565b69d3c21bcecceda1000000826000015114156120e8578290506122db565b69d3c21bcecceda100000083600001511415612106578190506122db565b600069d3c21bcecceda100000061211c85612a79565b600001518161212757fe5b049050600061213585612ab0565b600001519050600069d3c21bcecceda100000061215186612a79565b600001518161215c57fe5b049050600061216a86612ab0565b6000015190506000828502905060008514612195578285828161218957fe5b041461219457600080fd5b5b600069d3c21bcecceda100000082029050600082146121ce5769d3c21bcecceda10000008282816121c257fe5b04146121cd57600080fd5b5b80915060008486029050600086146121f657848682816121ea57fe5b04146121f557600080fd5b5b600084880290506000881461221b578488828161220f57fe5b041461221a57600080fd5b5b612223612aed565b878161222b57fe5b049650612236612aed565b858161223e57fe5b0494506000858802905060008814612266578588828161225a57fe5b041461226557600080fd5b5b61226e612b10565b604051806020016040528087815250905061229781604051806020016040528087815250612a1a565b90506122b181604051806020016040528086815250612a1a565b90506122cb81604051806020016040528085815250612a1a565b9050809a50505050505050505050505b92915050565b600069d3c21bcecceda10000008260000151816122fa57fe5b049050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156123bd57600080fd5b505afa1580156123d1573d6000803e3d6000fd5b505050506040513d60208110156123e757600080fd5b8101908080519060200190929190505050905090565b6000808314156124105760009050612431565b600082840290508284828161242157fe5b041461242c57600080fd5b809150505b92915050565b600080821161244557600080fd5b600082848161245057fe5b0490508091505092915050565b60008282111561246c57600080fd5b600082840390508091505092915050565b612485612b10565b6040518060200160405280838152509050919050565b6124a3612b10565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b6124de612b10565b6124ee6124e9611767565b61247d565b90506125196009604051806020016040529081600082015481525050826129c790919063ffffffff16565b1561261f57612526612b10565b61254f6009604051806020016040529081600082015481525050836129dc90919063ffffffff16565b9050612559612b10565b61258560066001016040518060200160405290816000820154815250508361208f90919063ffffffff16565b90506125b3600660000160405180602001604052908160008201548152505082612afa90919063ffffffff16565b156125d9576125c26000612051565b600660000160008201518160000155905050612618565b6126058160066000016040518060200160405290816000820154815250506129dc90919063ffffffff16565b6006600001600082015181600001559050505b505061275a565b6126486009604051806020016040529081600082015481525050826124c190919063ffffffff16565b1561275957612655612b10565b61267e8260096040518060200160405290816000820154815250506129dc90919063ffffffff16565b9050612688612b10565b6126b460066001016040518060200160405290816000820154815250508361208f90919063ffffffff16565b90506126e2816006600001604051806020016040529081600082015481525050612a1a90919063ffffffff16565b600660000160008201518160000155905050612739600660020160405180602001604052908160008201548152505060066000016040518060200160405290816000820154815250506129c790919063ffffffff16565b156127565760066002016006600001600082015481600001559050505b50505b5b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561281857600080fd5b505afa15801561282c573d6000803e3d6000fd5b505050506040513d602081101561284257600080fd5b8101908080519060200190929190505050905090565b612860612b10565b60008260000151141561287257600080fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda1000000828161289f57fe5b04146128aa57600080fd5b6040518060200160405280846000015183816128c257fe5b0481525091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561290957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160000151836000015111905092915050565b6129e4612b10565b8160000151836000015110156129f957600080fd5b60405180602001604052808360000151856000015103815250905092915050565b612a22612b10565b6000826000015184600001510190508360000151811015612a4257600080fd5b60405180602001604052808281525091505092915050565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b612a81612b10565b604051806020016040528069d3c21bcecceda100000080856000015181612aa457fe5b04028152509050919050565b612ab8612b10565b604051806020016040528069d3c21bcecceda100000080856000015181612adb57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6000816000015183600001511015905092915050565b604051806020016040528060008152509056fe4d61782074617267657420766f74696e67207969656c64206d757374206265206c6f776572207468616e2031303025a165627a7a723058202cc3bcd667daee46d90304edb08eb305ae38cd5a0f12b5676266d16e441ec34e0029",
  "sourceMap": "149:602:68:-;;;2369:1:52;2342:28;;524:10:108;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;149:602:68;;;;;;",
  "deployedSourceMap": "149:602:68:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;149:602:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11887:373:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12396:219;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3207:452:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3207:452:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;52:23:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5090:263:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4574:287:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4574:287:17;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4574:287:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4574:287:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4574:287:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4574:287:17;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4574:287:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4574:287:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4574:287:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4574:287:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12797:396:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9334:589;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8504:638;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8504:638:52;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5498:320;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1423:137:108;;;:::i;:::-;;240:194:68;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;240:194:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2342:28:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2155:25:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7434:820:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7434:820:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;523:113:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15890:635:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;659:77:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;438:81:68;;;:::i;:::-;;5985:305:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5985:305:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6717:249;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6717:249:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2707:261:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13395:473:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2530:150:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2530:150:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;6423:122:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3952:988;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3952:988:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;640:109:68;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;640:109:68;;;;;;;;;;;;;;;;;:::i;:::-;;2311:392:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2557:42:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;647:1546:17;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;647:1546:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1731:107:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:108;;;;;;;;;;;;;;;;;;;:::i;:::-;;11887:373:52;11942:7;11957:26;11986:23;:21;:23::i;:::-;11957:52;;12015:38;12056:35;:33;:35::i;:::-;12015:76;;12097:32;12132:54;12155:30;12132:18;:22;;:54;;;;:::i;:::-;12097:89;;12199:56;:47;12221:24;12199:21;:47::i;:::-;:54;:56::i;:::-;12192:63;;;;;11887:373;:::o;12396:219::-;12450:7;12478:132;:111;12558:23;:30;;12478:111;;;;;;;;;;;;;;;;;:61;12508:13;:11;:13::i;:::-;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12508:30:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12508:30:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12508:30:52;;;;;;;;;;;;;;;;12478:29;:61::i;:::-;:79;;:111;;;;:::i;:::-;:130;:132::i;:::-;12465:145;;12396:219;:::o;3207:452:17:-;3283:7;3298:24;3378:4;3372:11;3418:5;3397:19;3390:34;3497:1;3494;3490:2;3469:19;3463:4;3457;3446:53;3554:2;3551:1;3546:2;3525:19;3521:28;3506:51;3615:2;3594:19;3590:28;3584:35;3564:55;;3337:288;;3638:16;3631:23;;;3207:452;;;:::o;52:23:10:-;;;;;;;;;;;;;:::o;5090:263:52:-;5155:7;5164;5173;5188:42;5233:23;5188:68;;5270:22;:6;:13;;:20;;;;;;;;;;;;;;;;;;:22::i;:::-;5294:19;:6;:10;;:17;;;;;;;;;;;;;;;;;;:19::i;:::-;5315:32;:6;:23;;:30;;;;;;;;;;;;;;;;;;:32::i;:::-;5262:86;;;;;;;5090:263;;;:::o;4574:287:17:-;4688:4;4702:12;168:8;4734:24;;4765:1;4772:9;4734:48;4807:6;4815;4823;4790:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4790:40:17;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4790:40:17;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4790:40:17;;;4734:102;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4734:102:17;;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4720:116:17;;;;;4849:7;4842:14;;;4574:287;;;;;:::o;12797:396:52:-;12863:7;12878:26;12907:8;;;;;;;;;;;:27;;;1994:31:18;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1994:31:18;;;1984:42;;;;;;12907:53:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12907:53:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12907:53:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12907:53:52;;;;;;;;;;;;;;;;12878:82;;12967:17;12986:19;13009:18;:16;:18::i;:::-;:29;;;13039:18;13009:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13009:49:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13009:49:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13009:49:52;;;;;;;;;;;;;;;;;;;;;;;;;12966:92;;;;13077:111;13171:9;13077:80;13145:11;13077:63;13112:27;;13077:30;:28;:30::i;:::-;:34;;:63;;;;:::i;:::-;:67;;:80;;;;:::i;:::-;:84;;:111;;;;:::i;:::-;13064:124;;;;;12797:396;:::o;9334:589::-;9391:7;9406:31;9440:18;9448:9;;9440:3;:7;;:18;;;;:::i;:::-;9406:52;;768:6;762:3;707:2;747:18;:27;9468:23;:40;9464:455;;;9571:21;9595:47;9640:1;9595:40;563:15;637:16;9595:19;;:40;;;;:::i;:::-;:44;;:47;;;;:::i;:::-;9571:71;;9650:21;9674:62;768:6;762:3;707:2;747:18;:27;9674:42;9692:23;9674:13;:17;;:42;;;;:::i;:::-;:46;;:62;;;;:::i;:::-;9650:86;;9751:38;563:15;9751:13;:17;;:38;;;;:::i;:::-;9744:45;;;;;;;9464:455;9890:5;9882:14;;;;;;9911:1;9904:8;;;9334:589;;:::o;8504:638::-;8621:4;863:9:108;:7;:9::i;:::-;855:18;;;;;;8657:36:52;:23;:27;;:34;;;;;;;;;;;;;;;;;;:36::i;:::-;8650:3;:43;;:124;;;;8725:49;:23;:40;;:47;;;;;;;;;;;;;;;;;;:49::i;:::-;8705:16;:69;;8650:124;8635:145;;;;;;8816:21;8833:3;8816:16;:21::i;:::-;8786:23;:27;;:51;;;;;;;;;;;8886:34;8903:16;8886;:34::i;:::-;8843:23;:40;;:77;;;;;;;;;;;8941:52;8972:20;:18;:20::i;:::-;8941:23;:27;;:30;;;;;;;;;;;;;;;;;;;:52;;;;:::i;:::-;8926:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9067:53;9098:3;9103:16;9067:53;;;;;;;;;;;;;;;;;;;;;;;;9133:4;9126:11;;8504:638;;;;:::o;5498:320::-;5563:7;5572;5581;5596:42;5641:23;5596:68;;5685:19;:6;:10;;:17;;;;;;;;;;;;;;;;;;:19::i;:::-;5712:44;:6;:24;;:35;;:42;;;;;;;;;;;;;;;;;;:44::i;:::-;5764:43;:6;:24;;:34;;:41;;;;;;;;;;;;;;;;;;:43::i;:::-;5670:143;;;;;;;5498:320;;;:::o;1423:137:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;240:194:68:-;344:7;368:61;:52;390:29;368:21;:52::i;:::-;:59;:61::i;:::-;361:68;;240:194;;;:::o;2342:28:52:-;;;;:::o;2155:25:18:-;;;;;;;;;;;;;:::o;7434:820:52:-;7600:4;863:9:108;:7;:9::i;:::-;855:18;;;;;;7634:36:52;:23;:27;;:34;;;;;;;;;;;;;;;;;;:36::i;:::-;7627:3;:43;;:144;;;;7711:60;:23;:41;;:51;;:58;;;;;;;;;;;;;;;;;;:60::i;:::-;7682:25;:89;;7627:144;:247;;;;7813:61;:23;:41;;:52;;:59;;;;;;;;;;;;;;;;;;:61::i;:::-;7783:26;:91;;7627:247;7612:268;;;;;;7912:219;;;;;;;;7947:149;;;;;;;;7991:44;8008:26;7991:16;:44::i;:::-;7947:149;;;;8045:43;8062:25;8045:16;:43::i;:::-;7947:149;;;7912:219;;;;8104:21;8121:3;8104:16;:21::i;:::-;7912:219;;;7886:23;:245;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8142:90;8173:3;8178:26;8206:25;8142:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8245:4;8238:11;;7434:820;;;;;:::o;523:113:68:-;584:7;606:25;;599:32;;523:113;:::o;15890:635:52:-;15962:7;15971;15986:26;16015:23;:21;:23::i;:::-;15986:52;;16044:38;16085:35;:33;:35::i;:::-;16044:76;;16126:32;16161:54;16184:30;16161:18;:22;;:54;;;;:::i;:::-;16126:89;;16221:45;;:::i;:::-;16269:47;16291:24;16269:21;:47::i;:::-;16221:95;;16337:89;:77;16396:17;16337:49;16358:27;;16337:20;:49::i;:::-;:58;;:77;;;;:::i;:::-;:87;:89::i;:::-;16434:80;:68;16484:17;16434:40;16455:18;16434:20;:40::i;:::-;:49;;:68;;;;:::i;:::-;:78;:80::i;:::-;16322:198;;;;;;;;15890:635;;:::o;659:77:108:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;438:81:68:-;488:26;:24;:26::i;:::-;438:81::o;5985:305:52:-;6063:4;863:9:108;:7;:9::i;:::-;855:18;;;;;;6092:33:52;:24;:31;;;;;;;;;;;;;;;;;;:33::i;:::-;6083:5;:42;;:83;;;;;6137:29;:20;:18;:20::i;:::-;:27;:29::i;:::-;6129:5;:37;6083:83;6075:92;;;;;;6200:23;6217:5;6200:16;:23::i;:::-;6173:24;:50;;;;;;;;;;;6234:34;6262:5;6234:34;;;;;;;;;;;;;;;;;;6281:4;6274:11;;5985:305;;;:::o;6717:249::-;6798:4;863:9:108;:7;:9::i;:::-;855:18;;;;;;6827:27:52;;6818:5;:36;;6810:45;;;;;;6891:5;6861:27;:35;;;;6907:37;6938:5;6907:37;;;;;;;;;;;;;;;;;;6957:4;6950:11;;6717:249;;;:::o;2707:261:17:-;2754:7;2769:17;2789:14;:12;:14::i;:::-;2769:34;;2809:19;2846:9;2831:12;:24;;;;;;2809:46;;2893:1;2880:9;2865:12;:24;;;;;;:29;2861:79;;;2932:1;2918:11;:15;2904:29;;2861:79;2952:11;2945:18;;;;2707:261;:::o;13395:473:52:-;13449:7;13509:22;13534:8;;;;;;;;;;;:27;;;1735::18;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1735:27:18;;;1725:38;;;;;;13534:48:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13534:48:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13534:48:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13534:48:52;;;;;;;;;;;;;;;;13509:73;;13588:18;13609:56;13642:14;:22;;;13609:14;:12;:14::i;:::-;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13609:28:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13609:28:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13609:28:52;;;;;;;;;;;;;;;;:32;;:56;;;;:::i;:::-;13588:77;;13718:18;13739:13;:11;:13::i;:::-;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13739:29:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13739:29:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13739:29:52;;;;;;;;;;;;;;;;13718:50;;13781:82;:73;13821:32;13842:10;13821:20;:32::i;:::-;13781;13802:10;13781:20;:32::i;:::-;:39;;:73;;;;:::i;:::-;:80;:82::i;:::-;13774:89;;;;;13395:473;:::o;2530:150:18:-;863:9:108;:7;:9::i;:::-;855:18;;;;;;2620:15:18;2599:8;;:37;;;;;;;;;;;;;;;;;;2659:15;2647:28;;;;;;;;;;;;2530:150;:::o;6423:122:52:-;6485:7;6507:33;:24;:31;;;;;;;;;;;;;;;;;;:33::i;:::-;6500:40;;6423:122;:::o;3952:988::-;118:11:10;;;;;;;;;;;117:12;109:21;;;;;;150:4;136:11;;:18;;;;;;;;;;;;;;;;;;4379:30:52;4398:10;4379:18;:30::i;:::-;4415:28;4427:15;4415:11;:28::i;:::-;4449:87;4480:20;4502:33;4449:30;:87::i;:::-;;4542:165;4580:20;4608:43;4659:42;4542:30;:165::i;:::-;;4713:54;4741:25;4713:27;:54::i;:::-;;4773:60;4804:28;4773:30;:60::i;:::-;;4872:42;4889:24;4872:16;:42::i;:::-;4839:23;:30;;:75;;;;;;;;;;;4932:3;4920:9;:15;;;;3952:988;;;;;;;;;:::o;640:109:68:-;739:5;711:25;:33;;;;640:109;:::o;2311:392:17:-;2356:7;2371:11;2490:4;2484:11;2567:1;2564;2561;2540:19;2534:4;2528;2517:52;2625:2;2622:1;2617:2;2596:19;2592:28;2577:51;2673:2;2652:19;2648:28;2642:35;2635:42;;2449:234;;2695:3;2688:10;;;2311:392;:::o;2557:42:52:-;;;;:::o;647:1546:17:-;841:7;850;889:1;873:12;:17;;:38;;;;;910:1;894:12;:17;;873:38;865:47;;;;;;918:23;947:25;1080:4;1074:11;1130:12;1109:19;1105:38;1099:4;1092:52;1179:10;1158:19;1151:39;1234:12;1229:2;1208:19;1204:28;1197:50;1291:10;1286:2;1265:19;1261:28;1254:48;1346:12;1341:2;1320:19;1316:28;1309:50;1404:8;1398:3;1377:19;1373:29;1366:47;1458:9;1452:3;1431:19;1427:29;1420:48;1666:1;1655;1607:4;1578:19;1564:4;1510;1490:185;1705:14;1758:4;1752:11;1807:14;1787:18;1783:39;1777:4;1770:53;1868:14;1865:1;1845:18;1830:53;1898:7;1919:1;1914:71;;;;2039:18;2033:25;2014:44;;2120:2;2100:18;2096:27;2090:34;2069:55;;1891:243;;1914:71;1960:14;1940:18;1933:42;1891:243;;1039:1101;;;;2153:15;2170:17;2145:43;;;;;;647:1546;;;;;;;;;:::o;1731:107:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;1439:145:107:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;10194:1503:52:-;10294:27;;:::i;:::-;10331:20;10354:26;:24;:26::i;:::-;10331:49;;10386:19;10408:14;:12;:14::i;:::-;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10408:28:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10408:28:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10408:28:52;;;;;;;;;;;;;;;;10386:50;;10442:23;10468:62;10488:41;10504:24;10488:11;:15;;:41;;;;:::i;:::-;637:16;10468:19;;:62;;;;:::i;:::-;10442:88;;10536:29;10568:33;10588:12;637:16;10568:19;;:33;;;;:::i;:::-;10536:65;;10607:50;;:::i;:::-;10660:103;10719:43;10740:21;10719:20;:43::i;:::-;10660:44;10688:15;10660:27;:44::i;:::-;:58;;:103;;;;:::i;:::-;10607:156;;10773:47;10799:20;:18;:20::i;:::-;10773:22;:25;;:47;;;;:::i;:::-;10769:924;;;10830:33;;:::i;:::-;10866:134;10947:23;:41;;:52;;10866:134;;;;;;;;;;;;;;;;;:62;10907:20;:18;:20::i;:::-;10866:22;:40;;:62;;;;:::i;:::-;:80;;:134;;;;:::i;:::-;10830:170;;11008:38;;:::i;:::-;11049:31;11074:5;11049:20;:18;:20::i;:::-;:24;;:31;;;;:::i;:::-;11008:72;;11092:42;11106:23;:27;;11092:42;;;;;;;;;;;;;;;;;:10;:13;;:42;;;;:::i;:::-;11088:143;;;11153:10;11146:17;;;;;;;;;;;11088:143;11195:23;:27;;11188:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;10769:924;11247:47;11273:20;:18;:20::i;:::-;11247:22;:25;;:47;;;;:::i;:::-;11243:450;;;11304:33;;:::i;:::-;11340:142;11430:23;:41;;:51;;11340:142;;;;;;;;;;;;;;;;;:71;11388:22;11340:29;:27;:29::i;:::-;:47;;:71;;;;:::i;:::-;:89;;:142;;;;:::i;:::-;11304:178;;11494:30;11503:20;:18;:20::i;:::-;11494:5;:8;;:30;;;;:::i;:::-;11490:149;;;11543:36;11573:5;11543:20;:18;:20::i;:::-;:29;;:36;;;;:::i;:::-;11536:43;;;;;;;;;;11490:149;11611:19;11628:1;11611:16;:19::i;:::-;11604:26;;;;;;;;;;11243:450;11666:20;:18;:20::i;:::-;11659:27;;;;;;;10194:1503;;;;:::o;1657:92:6:-;1715:7;1737:1;:7;;;1730:14;;1657:92;;;:::o;2823:135:18:-;2869:9;2903:8;;;;;;;;;;;:27;;;1192:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1192:28:18;;;1182:39;;;;;;2903:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2903:49:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2903:49:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2903:49:18;;;;;;;;;;;;;;;;2886:67;;2823:135;:::o;4179:145:6:-;4231:15;;:::i;:::-;4267:13;:11;:13::i;:::-;4262:1;:18;;4254:27;;;;;;4294:25;;;;;;;;979;4303:1;:15;4294:25;;;4287:32;;4179:145;;;:::o;7584:1591::-;7663:15;;:::i;:::-;7701:1;7690;:7;;;:12;:28;;;;7717:1;7706;:7;;;:12;7690:28;7686:52;;;7727:11;;;;;;;;7736:1;7727:11;;;7720:18;;;;7686:52;979:25;7748:1;:7;;;:22;7744:36;;;7779:1;7772:8;;;;7744:36;979:25;7790:1;:7;;;:22;7786:36;;;7821:1;7814:8;;;;7786:36;7911:10;979:25;7924:10;7932:1;7924:7;:10::i;:::-;:16;;;:30;;;;;;7911:43;;7960:10;7973:13;7984:1;7973:10;:13::i;:::-;:19;;;7960:32;;7998:10;979:25;8011:10;8019:1;8011:7;:10::i;:::-;:16;;;:30;;;;;;7998:43;;8047:10;8060:13;8071:1;8060:10;:13::i;:::-;:19;;;8047:32;;8163:12;8183:2;8178;:7;8163:22;;8201:1;8195:2;:7;8191:37;;8225:2;8219;8212:4;:9;;;;;;:15;8204:24;;;;;;8191:37;8344:18;979:25;8365:4;:18;8344:39;;8401:1;8393:4;:9;8389:56;;979:25;8425:4;8412:10;:17;;;;;;:32;8404:41;;;;;;8389:56;8484:10;8477:17;;8501:12;8521:2;8516;:7;8501:22;;8539:1;8533:2;:7;8529:37;;8563:2;8557;8550:4;:9;;;;;;:15;8542:24;;;;;;8529:37;8590:12;8610:2;8605;:7;8590:22;;8628:1;8622:2;:7;8618:37;;8652:2;8646;8639:4;:9;;;;;;:15;8631:24;;;;;;8618:37;8689:14;:12;:14::i;:::-;8684:2;:19;;;;;;8679:24;;8719:14;:12;:14::i;:::-;8714:2;:19;;;;;;8709:24;;8739:12;8759:2;8754;:7;8739:22;;8777:1;8771:2;:7;8767:37;;8801:2;8795;8788:4;:9;;;;;;:15;8780:24;;;;;;8767:37;8905:22;;:::i;:::-;8930:14;;;;;;;;8939:4;8930:14;;;8905:39;;8959:27;8963:6;8971:14;;;;;;;;8980:4;8971:14;;;8959:3;:27::i;:::-;8950:36;;9028:27;9032:6;9040:14;;;;;;;;9049:4;9040:14;;;9028:3;:27::i;:::-;9019:36;;9097:27;9101:6;9109:14;;;;;;;;9118:4;9109:14;;;9097:3;:27::i;:::-;9088:36;;9164:6;9157:13;;;;;;;;;;;;7584:1591;;;;;:::o;4483:109::-;4544:7;979:25;4566:1;:7;;;:21;;;;;;4559:28;;4483:109;;;:::o;3534:156:18:-;3585:14;3629:8;;;;;;;;;;;:27;;;1902:33;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1902:33:18;;;1892:44;;;;;;3629:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3629:55:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3629:55:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3629:55:18;;;;;;;;;;;;;;;;3607:78;;3534:156;:::o;231:421:107:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;:10;607:19;;;;;;644:1;637:8;;;231:421;;;;;:::o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;949:17;;1070:1;1063:8;;;782:296;;;;:::o;1211:145::-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;1485:94:6:-;1533:15;;:::i;:::-;1563:11;;;;;;;;1572:1;1563:11;;;1556:18;;1485:94;;;:::o;1163:97::-;1204:15;;:::i;:::-;1234:21;;;;;;;;979:25;1234:21;;;1227:28;;1163:97;:::o;10571:114::-;10644:4;10673:1;:7;;;10663:1;:7;;;:17;10656:24;;10571:114;;;;:::o;14013:1381:52:-;14064:46;;:::i;:::-;14113:41;14130:23;:21;:23::i;:::-;14113:16;:41::i;:::-;14064:90;;14164:47;14186:24;14164:47;;;;;;;;;;;;;;;;;:18;:21;;:47;;;;:::i;:::-;14160:1230;;;14221:51;;:::i;:::-;14275:69;14312:24;14275:69;;;;;;;;;;;;;;;;;:18;:27;;:69;;;;:::i;:::-;14221:123;;14352:50;;:::i;:::-;14405:90;14447:23;:40;;14405:90;;;;;;;;;;;;;;;;;:23;:32;;:90;;;;:::i;:::-;14352:143;;14507:58;14534:23;:30;;14507:58;;;;;;;;;;;;;;;;;:22;:26;;:58;;;;:::i;:::-;14503:280;;;14610:23;14631:1;14610:20;:23::i;:::-;14577;:30;;:56;;;;;;;;;;;14503:280;;;14691:83;14742:22;14691:23;:30;;:39;;;;;;;;;;;;;;;;;;;:83;;;;:::i;:::-;14658:23;:30;;:116;;;;;;;;;;;14503:280;14160:1230;;;;;14799:47;14821:24;14799:47;;;;;;;;;;;;;;;;;:18;:21;;:47;;;;:::i;:::-;14795:595;;;14856:51;;:::i;:::-;14910:69;14953:18;14910:24;:33;;;;;;;;;;;;;;;;;;;:69;;;;:::i;:::-;14856:123;;14987:50;;:::i;:::-;15040:90;15082:23;:40;;15040:90;;;;;;;;;;;;;;;;;:23;:32;;:90;;;;:::i;:::-;14987:143;;15171:58;15206:22;15171:23;:30;;:34;;;;;;;;;;;;;;;;;;;:58;;;;:::i;:::-;15138:23;:30;;:91;;;;;;;;;;;15241:62;15275:23;:27;;15241:62;;;;;;;;;;;;;;;;;:23;:30;;:33;;;;;;;;;;;;;;;;;;;:62;;;;:::i;:::-;15237:147;;;15348:23;:27;;15315:23;:30;;:60;;;;;;;;;;;15237:147;14795:595;;;14160:1230;14013:1381;:::o;2962:142:18:-;3009:11;3047:8;;;;;;;;;;;:27;;;1477:29;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1477:29:18;;;1467:40;;;;;;3047:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3047:51:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3047:51:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3047:51:18;;;;;;;;;;;;;;;;3028:71;;2962:142;:::o;9995:240:6:-;10072:15;;:::i;:::-;10114:1;10103;:7;;;:12;;10095:21;;;;;;10122:9;979:25;10134:1;:7;;;:21;10122:33;;10188:1;:7;;;979:25;10169:1;:15;;;;;;:26;10161:35;;;;;;10209:21;;;;;;;;10222:1;:7;;;10218:1;:11;;;;;;10209:21;;;10202:28;;;9995:240;;;;:::o;1982:183:108:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;10270:114:6:-;10343:4;10372:1;:7;;;10362:1;:7;;;:17;10355:24;;10270:114;;;;:::o;6966:174::-;7045:15;;:::i;:::-;7087:1;:7;;;7076:1;:7;;;:18;;7068:27;;;;;;7108;;;;;;;;7127:1;:7;;;7117:1;:7;;;:17;7108:27;;;7101:34;;6966:174;;;;:::o;6708:182::-;6782:15;;:::i;:::-;6805:9;6827:1;:7;;;6817:1;:7;;;:17;6805:29;;6853:1;:7;;;6848:1;:12;;6840:21;;;;;;6874:11;;;;;;;;6883:1;6874:11;;;6867:18;;;6708:182;;;;:::o;2425:127::-;2471:7;2493:54;2486:61;;2425:127;:::o;5811:159::-;5870:15;;:::i;:::-;5900:47;;;;;;;;979:25;;5910:1;:7;;;:21;;;;;;5909:37;5900:47;;;5893:54;;5811:159;;;:::o;6257:172::-;6319:15;;:::i;:::-;6349:57;;;;;;;;979:25;;6369:1;:7;;;:21;;;;;;6368:37;6358:1;:7;;;:47;6349:57;;;6342:64;;6257:172;;;:::o;1888:87::-;1935:7;1957:13;1950:20;;1888:87;:::o;10420:116::-;10494:4;10524:1;:7;;;10513:1;:7;;;:18;;10506:25;;10420:116;;;;:::o;149:602:68:-;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.8;\n\nimport \"../EpochRewards.sol\";\n\n/**\n * @title A wrapper around EpochRewards that exposes internal functions for testing.\n */\ncontract EpochRewardsTest is EpochRewards {\n  uint256 private numValidatorsInCurrentSet;\n  function getRewardsMultiplier(uint256 targetGoldTotalSupplyIncrease)\n    external\n    view\n    returns (uint256)\n  {\n    return _getRewardsMultiplier(targetGoldTotalSupplyIncrease).unwrap();\n  }\n\n  function updateTargetVotingYield() external {\n    _updateTargetVotingYield();\n  }\n\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\n    return numValidatorsInCurrentSet;\n  }\n\n  function setNumberValidatorsInCurrentSet(uint256 value) external {\n    numValidatorsInCurrentSet = value;\n  }\n}\n",
  "sourcePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol",
  "ast": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol",
    "exportedSymbols": {
      "EpochRewardsTest": [
        20074
      ]
    },
    "id": 20075,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20029,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:68"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/EpochRewards.sol",
        "file": "../EpochRewards.sol",
        "id": 20030,
        "nodeType": "ImportDirective",
        "scope": 20075,
        "sourceUnit": 12737,
        "src": "25:29:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20031,
              "name": "EpochRewards",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12736,
              "src": "178:12:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EpochRewards_$12736",
                "typeString": "contract EpochRewards"
              }
            },
            "id": 20032,
            "nodeType": "InheritanceSpecifier",
            "src": "178:12:68"
          }
        ],
        "contractDependencies": [
          3120,
          4901,
          5179,
          12736,
          27896
        ],
        "contractKind": "contract",
        "documentation": "@title A wrapper around EpochRewards that exposes internal functions for testing.",
        "fullyImplemented": true,
        "id": 20074,
        "linearizedBaseContracts": [
          20074,
          12736,
          5179,
          4901,
          3120,
          27896
        ],
        "name": "EpochRewardsTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 20034,
            "name": "numValidatorsInCurrentSet",
            "nodeType": "VariableDeclaration",
            "scope": 20074,
            "src": "195:41:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20033,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "195:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 20047,
              "nodeType": "Block",
              "src": "355:79:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20042,
                            "name": "targetGoldTotalSupplyIncrease",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20036,
                            "src": "390:29:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 20041,
                          "name": "_getRewardsMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12422,
                          "src": "368:21:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_Fraction_$1284_memory_ptr_$",
                            "typeString": "function (uint256) view returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 20043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "368:52:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$1284_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 20044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1328,
                      "src": "368:59:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$1284_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$1284_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 20045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:61:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20040,
                  "id": 20046,
                  "nodeType": "Return",
                  "src": "361:68:68"
                }
              ]
            },
            "documentation": null,
            "id": 20048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardsMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20036,
                  "name": "targetGoldTotalSupplyIncrease",
                  "nodeType": "VariableDeclaration",
                  "scope": 20048,
                  "src": "270:37:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "269:39:68"
            },
            "returnParameters": {
              "id": 20040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20048,
                  "src": "344:7:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "343:9:68"
            },
            "scope": 20074,
            "src": "240:194:68",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20054,
              "nodeType": "Block",
              "src": "482:37:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20051,
                      "name": "_updateTargetVotingYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12666,
                      "src": "488:24:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 20052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:26:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20053,
                  "nodeType": "ExpressionStatement",
                  "src": "488:26:68"
                }
              ]
            },
            "documentation": null,
            "id": 20055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTargetVotingYield",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:68"
            },
            "returnParameters": {
              "id": 20050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:68"
            },
            "scope": 20074,
            "src": "438:81:68",
            "stateMutability": "nonpayable",
            "superFunction": 12682,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20062,
              "nodeType": "Block",
              "src": "593:43:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20060,
                    "name": "numValidatorsInCurrentSet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20034,
                    "src": "606:25:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20059,
                  "id": 20061,
                  "nodeType": "Return",
                  "src": "599:32:68"
                }
              ]
            },
            "documentation": null,
            "id": 20063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:2:68"
            },
            "returnParameters": {
              "id": 20059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20058,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20063,
                  "src": "584:7:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:9:68"
            },
            "scope": 20074,
            "src": "523:113:68",
            "stateMutability": "view",
            "superFunction": 4863,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20072,
              "nodeType": "Block",
              "src": "705:44:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20068,
                      "name": "numValidatorsInCurrentSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20034,
                      "src": "711:25:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 20069,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20065,
                      "src": "739:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "711:33:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20071,
                  "nodeType": "ExpressionStatement",
                  "src": "711:33:68"
                }
              ]
            },
            "documentation": null,
            "id": 20073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20065,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20073,
                  "src": "681:13:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "680:15:68"
            },
            "returnParameters": {
              "id": 20067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:68"
            },
            "scope": 20074,
            "src": "640:109:68",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 20075,
        "src": "149:602:68"
      }
    ],
    "src": "0:752:68"
  },
  "legacyAST": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol",
    "exportedSymbols": {
      "EpochRewardsTest": [
        20074
      ]
    },
    "id": 20075,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20029,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:68"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/governance/EpochRewards.sol",
        "file": "../EpochRewards.sol",
        "id": 20030,
        "nodeType": "ImportDirective",
        "scope": 20075,
        "sourceUnit": 12737,
        "src": "25:29:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20031,
              "name": "EpochRewards",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12736,
              "src": "178:12:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EpochRewards_$12736",
                "typeString": "contract EpochRewards"
              }
            },
            "id": 20032,
            "nodeType": "InheritanceSpecifier",
            "src": "178:12:68"
          }
        ],
        "contractDependencies": [
          3120,
          4901,
          5179,
          12736,
          27896
        ],
        "contractKind": "contract",
        "documentation": "@title A wrapper around EpochRewards that exposes internal functions for testing.",
        "fullyImplemented": true,
        "id": 20074,
        "linearizedBaseContracts": [
          20074,
          12736,
          5179,
          4901,
          3120,
          27896
        ],
        "name": "EpochRewardsTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 20034,
            "name": "numValidatorsInCurrentSet",
            "nodeType": "VariableDeclaration",
            "scope": 20074,
            "src": "195:41:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20033,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "195:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 20047,
              "nodeType": "Block",
              "src": "355:79:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20042,
                            "name": "targetGoldTotalSupplyIncrease",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20036,
                            "src": "390:29:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 20041,
                          "name": "_getRewardsMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12422,
                          "src": "368:21:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_Fraction_$1284_memory_ptr_$",
                            "typeString": "function (uint256) view returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 20043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "368:52:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$1284_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 20044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1328,
                      "src": "368:59:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$1284_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$1284_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 20045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:61:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20040,
                  "id": 20046,
                  "nodeType": "Return",
                  "src": "361:68:68"
                }
              ]
            },
            "documentation": null,
            "id": 20048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardsMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20036,
                  "name": "targetGoldTotalSupplyIncrease",
                  "nodeType": "VariableDeclaration",
                  "scope": 20048,
                  "src": "270:37:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "269:39:68"
            },
            "returnParameters": {
              "id": 20040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20048,
                  "src": "344:7:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "343:9:68"
            },
            "scope": 20074,
            "src": "240:194:68",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20054,
              "nodeType": "Block",
              "src": "482:37:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20051,
                      "name": "_updateTargetVotingYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12666,
                      "src": "488:24:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 20052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:26:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20053,
                  "nodeType": "ExpressionStatement",
                  "src": "488:26:68"
                }
              ]
            },
            "documentation": null,
            "id": 20055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTargetVotingYield",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:68"
            },
            "returnParameters": {
              "id": 20050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:68"
            },
            "scope": 20074,
            "src": "438:81:68",
            "stateMutability": "nonpayable",
            "superFunction": 12682,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20062,
              "nodeType": "Block",
              "src": "593:43:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20060,
                    "name": "numValidatorsInCurrentSet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20034,
                    "src": "606:25:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20059,
                  "id": 20061,
                  "nodeType": "Return",
                  "src": "599:32:68"
                }
              ]
            },
            "documentation": null,
            "id": 20063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:2:68"
            },
            "returnParameters": {
              "id": 20059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20058,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20063,
                  "src": "584:7:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:9:68"
            },
            "scope": 20074,
            "src": "523:113:68",
            "stateMutability": "view",
            "superFunction": 4863,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20072,
              "nodeType": "Block",
              "src": "705:44:68",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20068,
                      "name": "numValidatorsInCurrentSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20034,
                      "src": "711:25:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 20069,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20065,
                      "src": "739:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "711:33:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20071,
                  "nodeType": "ExpressionStatement",
                  "src": "711:33:68"
                }
              ]
            },
            "documentation": null,
            "id": 20073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20065,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20073,
                  "src": "681:13:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "680:15:68"
            },
            "returnParameters": {
              "id": 20067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:68"
            },
            "scope": 20074,
            "src": "640:109:68",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 20075,
        "src": "149:602:68"
      }
    ],
    "src": "0:752:68"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-12-06T00:01:35.942Z",
  "devdoc": {
    "methods": {
      "calculateTargetEpochPaymentAndRewards()": {
        "return": "The per validator epoch payment and the total rewards to voters."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "numerator/denominator of the computed quantity (not reduced)."
      },
      "getEpochSize()": {
        "return": "The current epoch size in blocks."
      },
      "getRewardsMultiplier()": {
        "return": "The rewards multiplier based on the current and target Gold supplies."
      },
      "getRewardsMultiplierParameters()": {
        "return": "The max multiplier and under/over spend adjustment factors."
      },
      "getTargetEpochRewards()": {
        "return": "the total target epoch rewards for voters."
      },
      "getTargetGoldTotalSupply()": {
        "return": "The target Gold supply according to the epoch rewards target schedule."
      },
      "getTargetTotalEpochPaymentsInGold()": {
        "return": "The total target epoch payments to validators, converted to Gold."
      },
      "getTargetVotingGoldFraction()": {
        "return": "The percentage of floating Gold voting to target."
      },
      "getTargetVotingYieldParameters()": {
        "return": "The target, max, and adjustment factor for target voting yield."
      },
      "getVotingGoldFraction()": {
        "return": "The fraction of floating Gold being used for voting in validator elections."
      },
      "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "details": "Should be called only once.",
        "params": {
          "_targetValidatorEpochPayment": "The target validator epoch payment.",
          "_targetVotingGoldFraction": "The percentage of floating Gold voting to target.",
          "registryAddress": "The address of the registry contract.",
          "rewardsMultiplierMax": "The max multiplier on target epoch rewards.",
          "rewardsMultiplierOverspendAdjustmentFactor": "Adjusts the multiplier on target epoch  rewards when the protocol is running ahead of the target Gold supply.",
          "rewardsMultiplierUnderspendAdjustmentFactor": "Adjusts the multiplier on target epoch  rewards when the protocol is running behind the target Gold supply.",
          "targetVotingYieldAdjustmentFactor": "The target block reward adjustment factor for voters.",
          "targetVotingYieldInitial": "The initial relative target block reward for voters.",
          "targetVotingYieldMax": "The max relative target block reward for voters."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setRewardsMultiplierParameters(uint256,uint256,uint256)": {
        "params": {
          "max": "The max multiplier on target epoch rewards.",
          "overspendAdjustmentFactor": "Adjusts the multiplier on target epoch rewards when the  protocol is running ahead of the target Gold supply.",
          "underspendAdjustmentFactor": "Adjusts the multiplier on target epoch rewards when the  protocol is running behind the target Gold supply."
        },
        "return": "True upon success."
      },
      "setTargetValidatorEpochPayment(uint256)": {
        "params": {
          "value": "The value in Celo Dollars."
        },
        "return": "True upon success."
      },
      "setTargetVotingGoldFraction(uint256)": {
        "params": {
          "value": "The percentage of floating Gold voting to target."
        },
        "return": "True upon success."
      },
      "setTargetVotingYieldParameters(uint256,uint256)": {
        "params": {
          "adjustmentFactor": "The target block reward adjustment factor for voters.",
          "max": "The max relative target block reward for voters."
        },
        "return": "True upon success."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "validatorAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set as sorted by the election."
        },
        "return": "Address of validator at the requested index."
      }
    },
    "title": "A wrapper around EpochRewards that exposes internal functions for testing."
  },
  "userdoc": {
    "methods": {
      "calculateTargetEpochPaymentAndRewards()": {
        "notice": "Calculates the per validator epoch payment and the total rewards to voters."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getRewardsMultiplier()": {
        "notice": "Returns the rewards multiplier based on the current and target Gold supplies."
      },
      "getRewardsMultiplierParameters()": {
        "notice": "Returns the rewards multiplier parameters."
      },
      "getTargetEpochRewards()": {
        "notice": "Returns the total target epoch rewards for voters."
      },
      "getTargetGoldTotalSupply()": {
        "notice": "Returns the target Gold supply according to the epoch rewards target schedule."
      },
      "getTargetTotalEpochPaymentsInGold()": {
        "notice": "Returns the total target epoch payments to validators, converted to Gold."
      },
      "getTargetVotingGoldFraction()": {
        "notice": "Returns the target voting Gold fraction."
      },
      "getTargetVotingYieldParameters()": {
        "notice": "Returns the target voting yield parameters."
      },
      "getVotingGoldFraction()": {
        "notice": "Returns the fraction of floating Gold being used for voting in validator elections."
      },
      "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Initializes critical variables."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setRewardsMultiplierParameters(uint256,uint256,uint256)": {
        "notice": "Sets the rewards multiplier parameters."
      },
      "setTargetValidatorEpochPayment(uint256)": {
        "notice": "Sets the target per-epoch payment in Celo Dollars for validators."
      },
      "setTargetVotingGoldFraction(uint256)": {
        "notice": "Sets the target voting Gold fraction."
      },
      "setTargetVotingYieldParameters(uint256,uint256)": {
        "notice": "Sets the target voting yield parameters."
      },
      "validatorAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator address from the current validator set."
      }
    }
  }
}
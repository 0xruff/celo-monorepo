{
  "contractName": "TestRandom",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "randomness",
          "type": "bytes32"
        },
        {
          "name": "newCommitment",
          "type": "bytes32"
        },
        {
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "revealAndCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setRandomnessBlockRetentionWindow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "computeCommitment",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomnessBlockRetentionWindow",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockRandomness",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_randomnessBlockRetentionWindow",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RandomnessBlockRetentionWindowSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "addTestRandomness",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "name": "cur",
          "type": "uint256"
        }
      ],
      "name": "getTestRandomness",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"randomness\",\"type\":\"bytes32\"},{\"name\":\"newCommitment\",\"type\":\"bytes32\"},{\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"revealAndCommit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"addTestRandomness\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setRandomnessBlockRetentionWindow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"computeCommitment\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomnessBlockRetentionWindow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"cur\",\"type\":\"uint256\"}],\"name\":\"getTestRandomness\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockRandomness\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_randomnessBlockRetentionWindow\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RandomnessBlockRetentionWindowSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"computeCommitment(bytes32)\":{\"params\":{\"randomness\":\"The value for which the commitment hash is computed.\"},\"return\":\"Commitment parameter.\"},\"getBlockRandomness(uint256)\":{\"params\":{\"blockNumber\":\"The number of block whose randomness value we want to know.\"},\"return\":\"The associated randomness value.\"},\"initialize(uint256)\":{\"params\":{\"_randomnessBlockRetentionWindow\":\"Number of old random blocks whose randomness values can be queried.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"random()\":{\"return\":\"Returns the current randomness value.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"details\":\"If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.\",\"params\":{\"newCommitment\":\"The hash of randomness that will be revealed in the future.\",\"proposer\":\"Address of the block proposer.\",\"randomness\":\"Bytes that will be added to the entropy pool.\"}},\"setRandomnessBlockRetentionWindow(uint256)\":{\"params\":{\"value\":\"Number of old random blocks whose randomness values can be queried.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"computeCommitment(bytes32)\":{\"notice\":\"Compute the commitment hash for a given randomness value.\"},\"getBlockRandomness(uint256)\":{\"notice\":\"Get randomness values of previous blocks.\"},\"initialize(uint256)\":{\"notice\":\"Initializes the contract with initial parameters.\"},\"random()\":{\"notice\":\"Querying the current randomness value.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"notice\":\"Implements step of the randomness protocol.\"},\"setRandomnessBlockRetentionWindow(uint256)\":{\"notice\":\"Sets the number of old random blocks whose randomness values can be queried.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol\":\"TestRandom\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xd2732488e07ec27bbb2c343ecb10ad0f76adce402b13b976aee88342be5c11e8\",\"urls\":[\"bzzr://97c9b03aad5c74adb18b6c40e14f2cc22b784a6d8841914e43f7c44e6ee340b7\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol\":{\"keccak256\":\"0xaff96408776b8cb373903f33e8102cdae92a082b753409ce4e58b4c29d650841\",\"urls\":[\"bzzr://834952c82083f162a3fb0ece30e13f8492d7bd0c1301837bec7a3a0eaf6b52da\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xf8470783201987bcae377bb928d7c632cac43f9eb971693d0c5db9b533853a6a\",\"urls\":[\"bzzr://f1452cc34aa553ae029634ff7c1a4a1a8765b249b321fab547093d794a6fc805\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol\":{\"keccak256\":\"0xdded198b1d6c193ee939020a2385f190dbdfaa90b60e5f0ebb59b0bbe97fb3ea\",\"urls\":[\"bzzr://ab900be15c7d356bc225ff896cb76e32a715e70349245a577c57c61abd8ffede\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]}},\"version\":1}",
  "bytecode": "0x6080604052610100600255336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610ebe806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806392e5d98f11610097578063e8fcf72311610066578063e8fcf7231461031a578063f2fde38b14610372578063fc484726146103b6578063fe4b84df146103f8576100f5565b806392e5d98f14610240578063c387742b1461026e578063e45def95146102b0578063e6266425146102ce576100f5565b806375832efc116100d357806375832efc1461014457806387ca71661461019c5780638da5cb5b146101d45780638f32d59b1461021e576100f5565b8063158ef93e146100fa5780635ec01e4d1461011c578063715018a61461013a575b600080fd5b610102610426565b604051808215151515815260200191505060405180910390f35b610124610439565b6040518082815260200191505060405180910390f35b61014261044a565b005b61019a6004803603606081101561015a57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061051a565b005b6101d2600480360360408110156101b257600080fd5b8101908080359060200190929190803590602001909291905050506105cc565b005b6101dc6105da565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610226610603565b604051808215151515815260200191505060405180910390f35b61026c6004803603602081101561025657600080fd5b810190808035906020019092919050505061065a565b005b61029a6004803603602081101561028457600080fd5b8101908080359060200190929190505050610705565b6040518082815260200191505060405180910390f35b6102b8610735565b6040518082815260200191505060405180910390f35b610304600480360360408110156102e457600080fd5b81019080803590602001909291908035906020019092919050505061073b565b6040518082815260200191505060405180910390f35b61035c6004803603602081101561033057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061074f565b6040518082815260200191505060405180910390f35b6103b46004803603602081101561038857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610767565b005b6103e2600480360360208110156103cc57600080fd5b8101908080359060200190929190505050610784565b6040518082815260200191505060405180910390f35b6104246004803603602081101561040e57600080fd5b8101908080359060200190929190505050610797565b005b600060149054906101000a900460ff1681565b600061044543436107e1565b905090565b610452610603565b61045b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b6105c78383836108f0565b505050565b6105d68282610b57565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610662610603565b61066b57600080fd5b600081116106c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610da2602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60025481565b600061074783836107e1565b905092915050565b60016020528060005260406000206000915090505481565b61076f610603565b61077857600080fd5b61078181610c4d565b50565b600061079082436107e1565b9050919050565b600060149054906101000a900460ff16156107b157600080fd5b6001600060146101000a81548160ff0219169083151502179055506107d533610c4d565b6107de8161065a565b50565b60008183111561083c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610dfb6028913960400191505060405180910390fd5b61085160055483610d4590919063ffffffff16565b8311801561087f57508160025410158061087e575061087b60025483610d4590919063ffffffff16565b83115b5b6108d4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180610e5e6035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610a3f576000801b831415610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180610e23603b913960400191505060405180910390fd5b60006109a084610705565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548114610a39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610dce602d913960400191505060405180910390fd5b50610a9b565b6000801b8314610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180610d66603c913960400191505060405180910390fd5b5b6000804314610abd57610ab8600143610d4590919063ffffffff16565b610ac0565b60005b9050610b0d43600360008481526020019081526020016000205486604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120610b57565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b80600360008481526020019081526020016000208190555060006005541415610b8e57436004819055506001600581905550610c49565b6002546005541115610bf8576003600060045481526020019081526020016000206000905560036000600160045401815260200190815260200160002060009055600260046000828254019250508190555060056000815480929190600190039190505550610c48565b6002546005541415610c345760036000600454815260200190815260200160002060009055600460008154809291906001019190505550610c47565b6005600081548092919060010191905055505b5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c8757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115610d5457600080fd5b60008284039050809150509291505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e7472616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e65737343616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b7372616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e7443616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a165627a7a72305820f3576328ff4dffab47a96a8ac0b738d7e17948c52539cd8658e229bb0dc88ad80029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806392e5d98f11610097578063e8fcf72311610066578063e8fcf7231461031a578063f2fde38b14610372578063fc484726146103b6578063fe4b84df146103f8576100f5565b806392e5d98f14610240578063c387742b1461026e578063e45def95146102b0578063e6266425146102ce576100f5565b806375832efc116100d357806375832efc1461014457806387ca71661461019c5780638da5cb5b146101d45780638f32d59b1461021e576100f5565b8063158ef93e146100fa5780635ec01e4d1461011c578063715018a61461013a575b600080fd5b610102610426565b604051808215151515815260200191505060405180910390f35b610124610439565b6040518082815260200191505060405180910390f35b61014261044a565b005b61019a6004803603606081101561015a57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061051a565b005b6101d2600480360360408110156101b257600080fd5b8101908080359060200190929190803590602001909291905050506105cc565b005b6101dc6105da565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610226610603565b604051808215151515815260200191505060405180910390f35b61026c6004803603602081101561025657600080fd5b810190808035906020019092919050505061065a565b005b61029a6004803603602081101561028457600080fd5b8101908080359060200190929190505050610705565b6040518082815260200191505060405180910390f35b6102b8610735565b6040518082815260200191505060405180910390f35b610304600480360360408110156102e457600080fd5b81019080803590602001909291908035906020019092919050505061073b565b6040518082815260200191505060405180910390f35b61035c6004803603602081101561033057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061074f565b6040518082815260200191505060405180910390f35b6103b46004803603602081101561038857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610767565b005b6103e2600480360360208110156103cc57600080fd5b8101908080359060200190929190505050610784565b6040518082815260200191505060405180910390f35b6104246004803603602081101561040e57600080fd5b8101908080359060200190929190505050610797565b005b600060149054906101000a900460ff1681565b600061044543436107e1565b905090565b610452610603565b61045b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b6105c78383836108f0565b505050565b6105d68282610b57565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610662610603565b61066b57600080fd5b600081116106c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610da2602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60025481565b600061074783836107e1565b905092915050565b60016020528060005260406000206000915090505481565b61076f610603565b61077857600080fd5b61078181610c4d565b50565b600061079082436107e1565b9050919050565b600060149054906101000a900460ff16156107b157600080fd5b6001600060146101000a81548160ff0219169083151502179055506107d533610c4d565b6107de8161065a565b50565b60008183111561083c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610dfb6028913960400191505060405180910390fd5b61085160055483610d4590919063ffffffff16565b8311801561087f57508160025410158061087e575061087b60025483610d4590919063ffffffff16565b83115b5b6108d4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180610e5e6035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610a3f576000801b831415610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180610e23603b913960400191505060405180910390fd5b60006109a084610705565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548114610a39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610dce602d913960400191505060405180910390fd5b50610a9b565b6000801b8314610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180610d66603c913960400191505060405180910390fd5b5b6000804314610abd57610ab8600143610d4590919063ffffffff16565b610ac0565b60005b9050610b0d43600360008481526020019081526020016000205486604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120610b57565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b80600360008481526020019081526020016000208190555060006005541415610b8e57436004819055506001600581905550610c49565b6002546005541115610bf8576003600060045481526020019081526020016000206000905560036000600160045401815260200190815260200160002060009055600260046000828254019250508190555060056000815480929190600190039190505550610c48565b6002546005541415610c345760036000600454815260200190815260200160002060009055600460008154809291906001019190505550610c47565b6005600081548092919060010191905055505b5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c8757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115610d5457600080fd5b60008284039050809150509291505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e7472616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e65737343616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b7372616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e7443616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a165627a7a72305820f3576328ff4dffab47a96a8ac0b738d7e17948c52539cd8658e229bb0dc88ad80029",
  "sourceMap": "50:313:90:-;;;520:3:79;472:51;;524:10:108;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;50:313:90;;;;;;",
  "deployedSourceMap": "50:313:90:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:313:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52:23:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4816:115:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1423:137:108;;;:::i;:::-;;2107:218:79;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2107:218:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;84:126:90;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;84:126:90;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;659:77:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1277:247:79;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1277:247:79;;;;;;;;;;;;;;;;;:::i;:::-;;4563:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4563:134:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;472:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;213:148:90;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;213:148:90;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;421:46:79;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;421:46:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1731:107:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:108;;;;;;;;;;;;;;;;;;;:::i;:::-;;5132:145:79;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5132:145:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;890:195;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;890:195:79;;;;;;;;;;;;;;;;;:::i;:::-;;52:23:10;;;;;;;;;;;;;:::o;4816:115:79:-;4857:7;4879:47;4899:12;4913;4879:19;:47::i;:::-;4872:54;;4816:115;:::o;1423:137:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;2107:218:79:-;2238:1;2216:24;;:10;:24;;;2208:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267;2284:10;2296:13;2311:8;2267:16;:53::i;:::-;2107:218;;;:::o;84:126:90:-;167:38;181:11;194:10;167:13;:38::i;:::-;84:126;;:::o;659:77:108:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1277:247:79:-;863:9:108;:7;:9::i;:::-;855:18;;;;;;1374:1:79;1366:5;:9;1358:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:5;1430:30;:38;;;;1479:40;1513:5;1479:40;;;;;;;;;;;;;;;;;;1277:247;:::o;4563:134::-;4631:7;4680:10;4663:28;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4663:28:79;;;4653:39;;;;;;4646:46;;4563:134;;;:::o;472:51::-;;;;:::o;213:148:90:-;297:7;319:37;339:11;352:3;319:19;:37::i;:::-;312:44;;213:148;;;;:::o;421:46:79:-;;;;;;;;;;;;;;;;;:::o;1731:107:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;5132:145:79:-;5204:7;5226:46;5246:11;5259:12;5226:19;:46::i;:::-;5219:53;;5132:145;;;:::o;890:195::-;118:11:10;;;;;;;;;;;117:12;109:21;;;;;;150:4;136:11;;:18;;;;;;;;;;;;;;;;;;978:30:79;997:10;978:18;:30::i;:::-;1014:66;1048:31;1014:33;:66::i;:::-;890:195;:::o;5523:452::-;5609:7;5647:3;5632:11;:18;;5624:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5730:20;5738:11;;5730:3;:7;;:20;;;;:::i;:::-;5716:11;:34;:152;;;;;5797:3;5763:30;;:37;;:104;;;;5828:39;5836:30;;5828:3;:7;;:39;;;;:::i;:::-;5814:11;:53;5763:104;5716:152;5701:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5950:7;:20;5958:11;5950:20;;;;;;;;;;;;5943:27;;5523:452;;;;:::o;2605:841::-;2798:1;2773:26;;:11;:21;2785:8;2773:21;;;;;;;;;;;;;;;;:26;2769:442;;2831:1;2817:15;;:10;:15;;2809:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2904:26;2933:29;2951:10;2933:17;:29::i;:::-;2904:58;;3009:11;:21;3021:8;3009:21;;;;;;;;;;;;;;;;2987:18;:43;2970:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:442;;;;3138:1;3124:15;;:10;:15;3116:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:442;3236:19;3274:1;3258:12;:17;:43;;3282:19;3299:1;3282:12;:16;;:19;;;;:::i;:::-;3258:43;;;3278:1;3258:43;3236:65;;3307:90;3321:12;3362:7;:20;3370:11;3362:20;;;;;;;;;;;;3384:10;3345:50;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3345:50:79;;;3335:61;;;;;;3307:13;:90::i;:::-;3428:13;3404:11;:21;3416:8;3404:21;;;;;;;;;;;;;;;:37;;;;2605:841;;;;:::o;3761:604::-;3863:10;3840:7;:20;3848:11;3840:20;;;;;;;;;;;:33;;;;3898:1;3883:11;;:16;3879:482;;;3924:12;3909;:27;;;;3958:1;3944:11;:15;;;;3879:482;;;3990:30;;3976:11;;:44;3972:389;;;4037:7;:21;4045:12;;4037:21;;;;;;;;;;;4030:28;;;4073:7;:25;4096:1;4081:12;;:16;4073:25;;;;;;;;;;;4066:32;;;4122:1;4106:12;;:17;;;;;;;;;;;4131:11;;:13;;;;;;;;;;;;;;3972:389;;;4176:30;;4161:11;;:45;4157:204;;;4223:7;:21;4231:12;;4223:21;;;;;;;;;;;4216:28;;;4252:12;;:14;;;;;;;;;;;;;4157:204;;;4341:11;;:13;;;;;;;;;;;;;4157:204;3972:389;3879:482;3761:604;;:::o;1982:183:108:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;1211:145:107:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o",
  "source": "pragma solidity ^0.5.3;\n\nimport \"../Random.sol\";\n\ncontract TestRandom is Random {\n  function addTestRandomness(uint256 blockNumber, bytes32 randomness) external {\n    addRandomness(blockNumber, randomness);\n  }\n  function getTestRandomness(uint256 blockNumber, uint256 cur) external view returns (bytes32) {\n    return _getBlockRandomness(blockNumber, cur);\n  }\n}\n",
  "sourcePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol",
  "ast": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol",
    "exportedSymbols": {
      "TestRandom": [
        23850
      ]
    },
    "id": 23851,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23818,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:90"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 23819,
        "nodeType": "ImportDirective",
        "scope": 23851,
        "sourceUnit": 23297,
        "src": "25:23:90",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23820,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23296,
              "src": "73:6:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$23296",
                "typeString": "contract Random"
              }
            },
            "id": 23821,
            "nodeType": "InheritanceSpecifier",
            "src": "73:6:90"
          }
        ],
        "contractDependencies": [
          3120,
          23296,
          23525,
          27896
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23850,
        "linearizedBaseContracts": [
          23850,
          23296,
          3120,
          27896,
          23525
        ],
        "name": "TestRandom",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23833,
              "nodeType": "Block",
              "src": "161:49:90",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23829,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23823,
                        "src": "181:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23830,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23825,
                        "src": "194:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 23828,
                      "name": "addRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23210,
                      "src": "167:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 23831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "167:38:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23832,
                  "nodeType": "ExpressionStatement",
                  "src": "167:38:90"
                }
              ]
            },
            "documentation": null,
            "id": 23834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23823,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23834,
                  "src": "111:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "111:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23825,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 23834,
                  "src": "132:18:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23824,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "110:41:90"
            },
            "returnParameters": {
              "id": 23827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:90"
            },
            "scope": 23850,
            "src": "84:126:90",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23848,
              "nodeType": "Block",
              "src": "306:55:90",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23844,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23836,
                        "src": "339:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23845,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23838,
                        "src": "352:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23843,
                      "name": "_getBlockRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23295,
                      "src": "319:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 23846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:37:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 23842,
                  "id": 23847,
                  "nodeType": "Return",
                  "src": "312:44:90"
                }
              ]
            },
            "documentation": null,
            "id": 23849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23836,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23849,
                  "src": "240:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23838,
                  "name": "cur",
                  "nodeType": "VariableDeclaration",
                  "scope": 23849,
                  "src": "261:11:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "239:34:90"
            },
            "returnParameters": {
              "id": 23842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23849,
                  "src": "297:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:9:90"
            },
            "scope": 23850,
            "src": "213:148:90",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23851,
        "src": "50:313:90"
      }
    ],
    "src": "0:364:90"
  },
  "legacyAST": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol",
    "exportedSymbols": {
      "TestRandom": [
        23850
      ]
    },
    "id": 23851,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23818,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:90"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 23819,
        "nodeType": "ImportDirective",
        "scope": 23851,
        "sourceUnit": 23297,
        "src": "25:23:90",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23820,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23296,
              "src": "73:6:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$23296",
                "typeString": "contract Random"
              }
            },
            "id": 23821,
            "nodeType": "InheritanceSpecifier",
            "src": "73:6:90"
          }
        ],
        "contractDependencies": [
          3120,
          23296,
          23525,
          27896
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23850,
        "linearizedBaseContracts": [
          23850,
          23296,
          3120,
          27896,
          23525
        ],
        "name": "TestRandom",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23833,
              "nodeType": "Block",
              "src": "161:49:90",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23829,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23823,
                        "src": "181:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23830,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23825,
                        "src": "194:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 23828,
                      "name": "addRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23210,
                      "src": "167:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 23831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "167:38:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23832,
                  "nodeType": "ExpressionStatement",
                  "src": "167:38:90"
                }
              ]
            },
            "documentation": null,
            "id": 23834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23823,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23834,
                  "src": "111:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "111:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23825,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 23834,
                  "src": "132:18:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23824,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "110:41:90"
            },
            "returnParameters": {
              "id": 23827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:90"
            },
            "scope": 23850,
            "src": "84:126:90",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23848,
              "nodeType": "Block",
              "src": "306:55:90",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23844,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23836,
                        "src": "339:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23845,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23838,
                        "src": "352:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23843,
                      "name": "_getBlockRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23295,
                      "src": "319:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 23846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:37:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 23842,
                  "id": 23847,
                  "nodeType": "Return",
                  "src": "312:44:90"
                }
              ]
            },
            "documentation": null,
            "id": 23849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23836,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23849,
                  "src": "240:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23838,
                  "name": "cur",
                  "nodeType": "VariableDeclaration",
                  "scope": 23849,
                  "src": "261:11:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "239:34:90"
            },
            "returnParameters": {
              "id": 23842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23849,
                  "src": "297:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:9:90"
            },
            "scope": 23850,
            "src": "213:148:90",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23851,
        "src": "50:313:90"
      }
    ],
    "src": "0:364:90"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-12-06T00:01:36.126Z",
  "devdoc": {
    "methods": {
      "computeCommitment(bytes32)": {
        "params": {
          "randomness": "The value for which the commitment hash is computed."
        },
        "return": "Commitment parameter."
      },
      "getBlockRandomness(uint256)": {
        "params": {
          "blockNumber": "The number of block whose randomness value we want to know."
        },
        "return": "The associated randomness value."
      },
      "initialize(uint256)": {
        "params": {
          "_randomnessBlockRetentionWindow": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "random()": {
        "return": "Returns the current randomness value."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "details": "If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.",
        "params": {
          "newCommitment": "The hash of randomness that will be revealed in the future.",
          "proposer": "Address of the block proposer.",
          "randomness": "Bytes that will be added to the entropy pool."
        }
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "params": {
          "value": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "computeCommitment(bytes32)": {
        "notice": "Compute the commitment hash for a given randomness value."
      },
      "getBlockRandomness(uint256)": {
        "notice": "Get randomness values of previous blocks."
      },
      "initialize(uint256)": {
        "notice": "Initializes the contract with initial parameters."
      },
      "random()": {
        "notice": "Querying the current randomness value."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "notice": "Implements step of the randomness protocol."
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "notice": "Sets the number of old random blocks whose randomness values can be queried."
      }
    }
  }
}
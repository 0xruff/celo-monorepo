{
  "contractName": "MockRandom",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "randomness",
          "type": "bytes32"
        },
        {
          "name": "newCommitment",
          "type": "bytes32"
        },
        {
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "revealAndCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setRandomnessBlockRetentionWindow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "computeCommitment",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomnessBlockRetentionWindow",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_randomnessBlockRetentionWindow",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RandomnessBlockRetentionWindowSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "addTestRandomness",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockRandomness",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"randomness\",\"type\":\"bytes32\"},{\"name\":\"newCommitment\",\"type\":\"bytes32\"},{\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"revealAndCommit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"addTestRandomness\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setRandomnessBlockRetentionWindow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"computeCommitment\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomnessBlockRetentionWindow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockRandomness\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_randomnessBlockRetentionWindow\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RandomnessBlockRetentionWindowSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"computeCommitment(bytes32)\":{\"params\":{\"randomness\":\"The value for which the commitment hash is computed.\"},\"return\":\"Commitment parameter.\"},\"initialize(uint256)\":{\"params\":{\"_randomnessBlockRetentionWindow\":\"Number of old random blocks whose randomness values can be queried.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"random()\":{\"return\":\"Returns the current randomness value.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"details\":\"If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.\",\"params\":{\"newCommitment\":\"The hash of randomness that will be revealed in the future.\",\"proposer\":\"Address of the block proposer.\",\"randomness\":\"Bytes that will be added to the entropy pool.\"}},\"setRandomnessBlockRetentionWindow(uint256)\":{\"params\":{\"value\":\"Number of old random blocks whose randomness values can be queried.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"computeCommitment(bytes32)\":{\"notice\":\"Compute the commitment hash for a given randomness value.\"},\"initialize(uint256)\":{\"notice\":\"Initializes the contract with initial parameters.\"},\"random()\":{\"notice\":\"Querying the current randomness value.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"notice\":\"Implements step of the randomness protocol.\"},\"setRandomnessBlockRetentionWindow(uint256)\":{\"notice\":\"Sets the number of old random blocks whose randomness values can be queried.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/MockRandom.sol\":\"MockRandom\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xd2732488e07ec27bbb2c343ecb10ad0f76adce402b13b976aee88342be5c11e8\",\"urls\":[\"bzzr://97c9b03aad5c74adb18b6c40e14f2cc22b784a6d8841914e43f7c44e6ee340b7\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol\":{\"keccak256\":\"0xaff96408776b8cb373903f33e8102cdae92a082b753409ce4e58b4c29d650841\",\"urls\":[\"bzzr://834952c82083f162a3fb0ece30e13f8492d7bd0c1301837bec7a3a0eaf6b52da\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xf8470783201987bcae377bb928d7c632cac43f9eb971693d0c5db9b533853a6a\",\"urls\":[\"bzzr://f1452cc34aa553ae029634ff7c1a4a1a8765b249b321fab547093d794a6fc805\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/MockRandom.sol\":{\"keccak256\":\"0x7b276f0ccc69fde885e492cc16874991d8ee2212afa26914353febc2a9c45511\",\"urls\":[\"bzzr://d13ba8cde56cc305f33cff128567a75c2705840e2cb942f422113b7843fbe2a0\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]}},\"version\":1}",
  "bytecode": "0x6080604052610100600255336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610ef7806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806392e5d98f1161008c578063e8fcf72311610066578063e8fcf723146102c3578063f2fde38b1461031b578063fc4847261461035f578063fe4b84df146103a1576100ea565b806392e5d98f14610235578063c387742b14610263578063e45def95146102a5576100ea565b806375832efc116100c857806375832efc1461013957806387ca7166146101915780638da5cb5b146101c95780638f32d59b14610213576100ea565b8063158ef93e146100ef5780635ec01e4d14610111578063715018a61461012f575b600080fd5b6100f76103cf565b604051808215151515815260200191505060405180910390f35b6101196103e2565b6040518082815260200191505060405180910390f35b6101376103f3565b005b61018f6004803603606081101561014f57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104c3565b005b6101c7600480360360408110156101a757600080fd5b810190808035906020019092919080359060200190929190505050610575565b005b6101d1610591565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61021b6105ba565b604051808215151515815260200191505060405180910390f35b6102616004803603602081101561024b57600080fd5b8101908080359060200190929190505050610611565b005b61028f6004803603602081101561027957600080fd5b81019080803590602001909291905050506106bc565b6040518082815260200191505060405180910390f35b6102ad6106ec565b6040518082815260200191505060405180910390f35b610305600480360360208110156102d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f2565b6040518082815260200191505060405180910390f35b61035d6004803603602081101561033157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070a565b005b61038b6004803603602081101561037557600080fd5b8101908080359060200190929190505050610727565b6040518082815260200191505060405180910390f35b6103cd600480360360208110156103b757600080fd5b81019080803590602001909291905050506107d0565b005b600060149054906101000a900460ff1681565b60006103ee434361081a565b905090565b6103fb6105ba565b61040457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610565576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b610570838383610929565b505050565b8060066000848152602001908152602001600020819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106196105ba565b61062257600080fd5b6000811161067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ddb602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60025481565b60016020528060005260406000206000915090505481565b6107126105ba565b61071b57600080fd5b61072481610b90565b50565b60008060001b600660008481526020019081526020016000205414156107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f2072616e646f6d6e65737320666f756e640000000000000000000000000081525060200191505060405180910390fd5b60066000838152602001908152602001600020549050919050565b600060149054906101000a900460ff16156107ea57600080fd5b6001600060146101000a81548160ff02191690831515021790555061080e33610b90565b61081781610611565b50565b600081831115610875576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610e346028913960400191505060405180910390fd5b61088a60055483610c8890919063ffffffff16565b831180156108b85750816002541015806108b757506108b460025483610c8890919063ffffffff16565b83115b5b61090d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180610e976035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610a78576000801b8314156109ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180610e5c603b913960400191505060405180910390fd5b60006109d9846106bc565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548114610a72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610e07602d913960400191505060405180910390fd5b50610ad4565b6000801b8314610ad3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180610d9f603c913960400191505060405180910390fd5b5b6000804314610af657610af1600143610c8890919063ffffffff16565b610af9565b60005b9050610b4643600360008481526020019081526020016000205486604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120610ca8565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bca57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115610c9757600080fd5b600082840390508091505092915050565b80600360008481526020019081526020016000208190555060006005541415610cdf57436004819055506001600581905550610d9a565b6002546005541115610d49576003600060045481526020019081526020016000206000905560036000600160045401815260200190815260200160002060009055600260046000828254019250508190555060056000815480929190600190039190505550610d99565b6002546005541415610d855760036000600454815260200190815260200160002060009055600460008154809291906001019190505550610d98565b6005600081548092919060010191905055505b5b5b505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e7472616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e65737343616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b7372616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e7443616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a165627a7a723058200eaf10f9e3cbded41b25586aa91ff2265dbdecc9f3f0e2d585a5d148b33e21520029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806392e5d98f1161008c578063e8fcf72311610066578063e8fcf723146102c3578063f2fde38b1461031b578063fc4847261461035f578063fe4b84df146103a1576100ea565b806392e5d98f14610235578063c387742b14610263578063e45def95146102a5576100ea565b806375832efc116100c857806375832efc1461013957806387ca7166146101915780638da5cb5b146101c95780638f32d59b14610213576100ea565b8063158ef93e146100ef5780635ec01e4d14610111578063715018a61461012f575b600080fd5b6100f76103cf565b604051808215151515815260200191505060405180910390f35b6101196103e2565b6040518082815260200191505060405180910390f35b6101376103f3565b005b61018f6004803603606081101561014f57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104c3565b005b6101c7600480360360408110156101a757600080fd5b810190808035906020019092919080359060200190929190505050610575565b005b6101d1610591565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61021b6105ba565b604051808215151515815260200191505060405180910390f35b6102616004803603602081101561024b57600080fd5b8101908080359060200190929190505050610611565b005b61028f6004803603602081101561027957600080fd5b81019080803590602001909291905050506106bc565b6040518082815260200191505060405180910390f35b6102ad6106ec565b6040518082815260200191505060405180910390f35b610305600480360360208110156102d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f2565b6040518082815260200191505060405180910390f35b61035d6004803603602081101561033157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070a565b005b61038b6004803603602081101561037557600080fd5b8101908080359060200190929190505050610727565b6040518082815260200191505060405180910390f35b6103cd600480360360208110156103b757600080fd5b81019080803590602001909291905050506107d0565b005b600060149054906101000a900460ff1681565b60006103ee434361081a565b905090565b6103fb6105ba565b61040457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610565576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b610570838383610929565b505050565b8060066000848152602001908152602001600020819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106196105ba565b61062257600080fd5b6000811161067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ddb602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60025481565b60016020528060005260406000206000915090505481565b6107126105ba565b61071b57600080fd5b61072481610b90565b50565b60008060001b600660008481526020019081526020016000205414156107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f2072616e646f6d6e65737320666f756e640000000000000000000000000081525060200191505060405180910390fd5b60066000838152602001908152602001600020549050919050565b600060149054906101000a900460ff16156107ea57600080fd5b6001600060146101000a81548160ff02191690831515021790555061080e33610b90565b61081781610611565b50565b600081831115610875576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610e346028913960400191505060405180910390fd5b61088a60055483610c8890919063ffffffff16565b831180156108b85750816002541015806108b757506108b460025483610c8890919063ffffffff16565b83115b5b61090d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180610e976035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610a78576000801b8314156109ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180610e5c603b913960400191505060405180910390fd5b60006109d9846106bc565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548114610a72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610e07602d913960400191505060405180910390fd5b50610ad4565b6000801b8314610ad3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180610d9f603c913960400191505060405180910390fd5b5b6000804314610af657610af1600143610c8890919063ffffffff16565b610af9565b60005b9050610b4643600360008481526020019081526020016000205486604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120610ca8565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bca57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115610c9757600080fd5b600082840390508091505092915050565b80600360008481526020019081526020016000208190555060006005541415610cdf57436004819055506001600581905550610d9a565b6002546005541115610d49576003600060045481526020019081526020016000206000905560036000600160045401815260200190815260200160002060009055600260046000828254019250508190555060056000815480929190600190039190505550610d99565b6002546005541415610d855760036000600454815260200190815260200160002060009055600460008154809291906001019190505550610d98565b6005600081548092919060010191905055505b5b5b505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e7472616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e65737343616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b7372616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e7443616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a165627a7a723058200eaf10f9e3cbded41b25586aa91ff2265dbdecc9f3f0e2d585a5d148b33e21520029",
  "sourceMap": "50:392:88:-;;;520:3:79;472:51;;524:10:108;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;50:392:88;;;;;;",
  "deployedSourceMap": "50:392:88:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:392:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52:23:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4816:115:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1423:137:108;;;:::i;:::-;;2107:218:79;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2107:218:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;132:121:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;132:121:88;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;659:77:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1277:247:79;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1277:247:79;;;;;;;;;;;;;;;;;:::i;:::-;;4563:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4563:134:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;472:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;421:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;421:46:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1731:107:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:108;;;;;;;;;;;;;;;;;;;:::i;:::-;;256:184:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;256:184:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;890:195:79;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;890:195:79;;;;;;;;;;;;;;;;;:::i;:::-;;52:23:10;;;;;;;;;;;;;:::o;4816:115:79:-;4857:7;4879:47;4899:12;4913;4879:19;:47::i;:::-;4872:54;;4816:115;:::o;1423:137:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;2107:218:79:-;2238:1;2216:24;;:10;:24;;;2208:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267;2284:10;2296:13;2311:8;2267:16;:53::i;:::-;2107:218;;;:::o;132:121:88:-;238:10;215:7;:20;223:11;215:20;;;;;;;;;;;:33;;;;132:121;;:::o;659:77:108:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1277:247:79:-;863:9:108;:7;:9::i;:::-;855:18;;;;;;1374:1:79;1366:5;:9;1358:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:5;1430:30;:38;;;;1479:40;1513:5;1479:40;;;;;;;;;;;;;;;;;;1277:247;:::o;4563:134::-;4631:7;4680:10;4663:28;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4663:28:79;;;4653:39;;;;;;4646:46;;4563:134;;;:::o;472:51::-;;;;:::o;421:46::-;;;;;;;;;;;;;;;;;:::o;1731:107:108:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;256:184:88:-;328:7;375:3;351:27;;:7;:20;359:11;351:20;;;;;;;;;;;;:27;;343:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:7;:20;423:11;415:20;;;;;;;;;;;;408:27;;256:184;;;:::o;890:195:79:-;118:11:10;;;;;;;;;;;117:12;109:21;;;;;;150:4;136:11;;:18;;;;;;;;;;;;;;;;;;978:30:79;997:10;978:18;:30::i;:::-;1014:66;1048:31;1014:33;:66::i;:::-;890:195;:::o;5523:452::-;5609:7;5647:3;5632:11;:18;;5624:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5730:20;5738:11;;5730:3;:7;;:20;;;;:::i;:::-;5716:11;:34;:152;;;;;5797:3;5763:30;;:37;;:104;;;;5828:39;5836:30;;5828:3;:7;;:39;;;;:::i;:::-;5814:11;:53;5763:104;5716:152;5701:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5950:7;:20;5958:11;5950:20;;;;;;;;;;;;5943:27;;5523:452;;;;:::o;2605:841::-;2798:1;2773:26;;:11;:21;2785:8;2773:21;;;;;;;;;;;;;;;;:26;2769:442;;2831:1;2817:15;;:10;:15;;2809:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2904:26;2933:29;2951:10;2933:17;:29::i;:::-;2904:58;;3009:11;:21;3021:8;3009:21;;;;;;;;;;;;;;;;2987:18;:43;2970:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:442;;;;3138:1;3124:15;;:10;:15;3116:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:442;3236:19;3274:1;3258:12;:17;:43;;3282:19;3299:1;3282:12;:16;;:19;;;;:::i;:::-;3258:43;;;3278:1;3258:43;3236:65;;3307:90;3321:12;3362:7;:20;3370:11;3362:20;;;;;;;;;;;;3384:10;3345:50;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3345:50:79;;;3335:61;;;;;;3307:13;:90::i;:::-;3428:13;3404:11;:21;3416:8;3404:21;;;;;;;;;;;;;;;:37;;;;2605:841;;;;:::o;1982:183:108:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;1211:145:107:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;3761:604:79:-;3863:10;3840:7;:20;3848:11;3840:20;;;;;;;;;;;:33;;;;3898:1;3883:11;;:16;3879:482;;;3924:12;3909;:27;;;;3958:1;3944:11;:15;;;;3879:482;;;3990:30;;3976:11;;:44;3972:389;;;4037:7;:21;4045:12;;4037:21;;;;;;;;;;;4030:28;;;4073:7;:25;4096:1;4081:12;;:16;4073:25;;;;;;;;;;;4066:32;;;4122:1;4106:12;;:17;;;;;;;;;;;4131:11;;:13;;;;;;;;;;;;;;3972:389;;;4176:30;;4161:11;;:45;4157:204;;;4223:7;:21;4231:12;;4223:21;;;;;;;;;;;4216:28;;;4252:12;;:14;;;;;;;;;;;;;4157:204;;;4341:11;;:13;;;;;;;;;;;;;4157:204;3972:389;3879:482;3761:604;;:::o",
  "source": "pragma solidity ^0.5.3;\n\nimport \"../Random.sol\";\n\ncontract MockRandom is Random {\n  mapping(uint256 => bytes32) private history;\n\n  function addTestRandomness(uint256 blockNumber, bytes32 randomness) external {\n    history[blockNumber] = randomness;\n  }\n  function getBlockRandomness(uint256 blockNumber) external view returns (bytes32) {\n    require(history[blockNumber] != 0x0, \"No randomness found\");\n    return history[blockNumber];\n  }\n}\n",
  "sourcePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/MockRandom.sol",
  "ast": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/MockRandom.sol",
    "exportedSymbols": {
      "MockRandom": [
        23775
      ]
    },
    "id": 23776,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23732,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:88"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 23733,
        "nodeType": "ImportDirective",
        "scope": 23776,
        "sourceUnit": 23297,
        "src": "25:23:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23734,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23296,
              "src": "73:6:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$23296",
                "typeString": "contract Random"
              }
            },
            "id": 23735,
            "nodeType": "InheritanceSpecifier",
            "src": "73:6:88"
          }
        ],
        "contractDependencies": [
          3120,
          23296,
          23525,
          27896
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23775,
        "linearizedBaseContracts": [
          23775,
          23296,
          3120,
          27896,
          23525
        ],
        "name": "MockRandom",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23739,
            "name": "history",
            "nodeType": "VariableDeclaration",
            "scope": 23775,
            "src": "84:43:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 23738,
              "keyType": {
                "id": 23736,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "92:7:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "84:27:88",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 23737,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23752,
              "nodeType": "Block",
              "src": "209:44:88",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23746,
                        "name": "history",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23739,
                        "src": "215:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 23748,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 23747,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23741,
                        "src": "223:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "215:20:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23749,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23743,
                      "src": "238:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "215:33:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 23751,
                  "nodeType": "ExpressionStatement",
                  "src": "215:33:88"
                }
              ]
            },
            "documentation": null,
            "id": 23753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23741,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23753,
                  "src": "159:19:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23743,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 23753,
                  "src": "180:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "158:41:88"
            },
            "returnParameters": {
              "id": 23745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:88"
            },
            "scope": 23775,
            "src": "132:121:88",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23773,
              "nodeType": "Block",
              "src": "337:103:88",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 23765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 23761,
                            "name": "history",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23739,
                            "src": "351:7:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 23763,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 23762,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23755,
                            "src": "359:11:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "351:20:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 23764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "375:3:88",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "351:27:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2072616e646f6d6e65737320666f756e64",
                        "id": 23766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "380:21:88",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        },
                        "value": "No randomness found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        }
                      ],
                      "id": 23760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28643,
                        28644
                      ],
                      "referencedDeclaration": 28644,
                      "src": "343:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:59:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23768,
                  "nodeType": "ExpressionStatement",
                  "src": "343:59:88"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 23769,
                      "name": "history",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23739,
                      "src": "415:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 23771,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 23770,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23755,
                      "src": "423:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "415:20:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 23759,
                  "id": 23772,
                  "nodeType": "Return",
                  "src": "408:27:88"
                }
              ]
            },
            "documentation": null,
            "id": 23774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23755,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23774,
                  "src": "284:19:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "283:21:88"
            },
            "returnParameters": {
              "id": 23759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23758,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23774,
                  "src": "328:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23757,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:9:88"
            },
            "scope": 23775,
            "src": "256:184:88",
            "stateMutability": "view",
            "superFunction": 23252,
            "visibility": "external"
          }
        ],
        "scope": 23776,
        "src": "50:392:88"
      }
    ],
    "src": "0:443:88"
  },
  "legacyAST": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/MockRandom.sol",
    "exportedSymbols": {
      "MockRandom": [
        23775
      ]
    },
    "id": 23776,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23732,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:88"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 23733,
        "nodeType": "ImportDirective",
        "scope": 23776,
        "sourceUnit": 23297,
        "src": "25:23:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23734,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23296,
              "src": "73:6:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$23296",
                "typeString": "contract Random"
              }
            },
            "id": 23735,
            "nodeType": "InheritanceSpecifier",
            "src": "73:6:88"
          }
        ],
        "contractDependencies": [
          3120,
          23296,
          23525,
          27896
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23775,
        "linearizedBaseContracts": [
          23775,
          23296,
          3120,
          27896,
          23525
        ],
        "name": "MockRandom",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23739,
            "name": "history",
            "nodeType": "VariableDeclaration",
            "scope": 23775,
            "src": "84:43:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 23738,
              "keyType": {
                "id": 23736,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "92:7:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "84:27:88",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 23737,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23752,
              "nodeType": "Block",
              "src": "209:44:88",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23746,
                        "name": "history",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23739,
                        "src": "215:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 23748,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 23747,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23741,
                        "src": "223:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "215:20:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23749,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23743,
                      "src": "238:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "215:33:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 23751,
                  "nodeType": "ExpressionStatement",
                  "src": "215:33:88"
                }
              ]
            },
            "documentation": null,
            "id": 23753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23741,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23753,
                  "src": "159:19:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23743,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 23753,
                  "src": "180:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "158:41:88"
            },
            "returnParameters": {
              "id": 23745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:88"
            },
            "scope": 23775,
            "src": "132:121:88",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23773,
              "nodeType": "Block",
              "src": "337:103:88",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 23765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 23761,
                            "name": "history",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23739,
                            "src": "351:7:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 23763,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 23762,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23755,
                            "src": "359:11:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "351:20:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 23764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "375:3:88",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "351:27:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2072616e646f6d6e65737320666f756e64",
                        "id": 23766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "380:21:88",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        },
                        "value": "No randomness found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        }
                      ],
                      "id": 23760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28643,
                        28644
                      ],
                      "referencedDeclaration": 28644,
                      "src": "343:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:59:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23768,
                  "nodeType": "ExpressionStatement",
                  "src": "343:59:88"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 23769,
                      "name": "history",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23739,
                      "src": "415:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 23771,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 23770,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23755,
                      "src": "423:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "415:20:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 23759,
                  "id": 23772,
                  "nodeType": "Return",
                  "src": "408:27:88"
                }
              ]
            },
            "documentation": null,
            "id": 23774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23755,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 23774,
                  "src": "284:19:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "283:21:88"
            },
            "returnParameters": {
              "id": 23759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23758,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23774,
                  "src": "328:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23757,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:9:88"
            },
            "scope": 23775,
            "src": "256:184:88",
            "stateMutability": "view",
            "superFunction": 23252,
            "visibility": "external"
          }
        ],
        "scope": 23776,
        "src": "50:392:88"
      }
    ],
    "src": "0:443:88"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-12-06T00:01:36.123Z",
  "devdoc": {
    "methods": {
      "computeCommitment(bytes32)": {
        "params": {
          "randomness": "The value for which the commitment hash is computed."
        },
        "return": "Commitment parameter."
      },
      "initialize(uint256)": {
        "params": {
          "_randomnessBlockRetentionWindow": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "random()": {
        "return": "Returns the current randomness value."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "details": "If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.",
        "params": {
          "newCommitment": "The hash of randomness that will be revealed in the future.",
          "proposer": "Address of the block proposer.",
          "randomness": "Bytes that will be added to the entropy pool."
        }
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "params": {
          "value": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "computeCommitment(bytes32)": {
        "notice": "Compute the commitment hash for a given randomness value."
      },
      "initialize(uint256)": {
        "notice": "Initializes the contract with initial parameters."
      },
      "random()": {
        "notice": "Querying the current randomness value."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "notice": "Implements step of the randomness protocol."
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "notice": "Sets the number of old random blocks whose randomness values can be queried."
      }
    }
  }
}
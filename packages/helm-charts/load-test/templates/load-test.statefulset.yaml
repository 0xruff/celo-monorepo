apiVersion: v1
kind: Service
metadata:
  name: load-test
  labels:
    component: load-test
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    component: load-test
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ .Values.environment }}-load-test
  labels:
    app: load-test
    chart: load-test
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: load-test
spec:
  podManagementPolicy: Parallel
  serviceName: load-test
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: load-test
      release: {{ .Release.Name }}
      component: load-test
  template:
    metadata:
      labels:
        app: load-test
        release: {{ .Release.Name }}
        component: load-test
    spec:
      initContainers:
      - name: generate-keys
        image: {{ .Values.celotool.image.repository }}:{{ .Values.celotool.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
          - bash
          - "-c"
          - |
            [[ $REPLICA_NAME =~ -([0-9]+)$ ]] || exit 1
            RID=${BASH_REMATCH[1]}
            echo $RID > /root/.celo/rid

            for thread in $(seq 0 {{ sub .Values.threads 1 | default "0" }}); do
              echo "Generating private key for rid=$RID thread=$thread"
              celotooljs.sh generate bip32 \
                --mnemonic "$MNEMONIC" \
                --accountType load_testing \
                --index $RID$thread \
                > /root/.celo/pkey$thread

              echo "Generating account address for rid=$RID thread=$thread"
              address=$(celotooljs.sh generate account-address \
                --private-key $(cat /root/.celo/pkey$thread))
              echo "$address" >> /root/.celo/address
              echo "Public Address $address"
            done
        env:
        - name: REPLICA_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MNEMONIC
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment }}-load-test
              key: mnemonic
        volumeMounts:
        - name: data
          mountPath: /root/.celo
{{ include "common.init-genesis-container" .  | indent 6 }}
      - name: import-geth-account
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args:
        - "-c"
        - |
          for thread in $(seq 0 {{ sub .Values.threads 1 | default "0" }}); do
            geth account import --password /root/.celo/account/accountSecret /root/.celo/pkey$thread || true
          done
        volumeMounts:
        - name: data
          mountPath: /root/.celo
        - name: account
          mountPath: "/root/.celo/account"
          readOnly: true
      containers:
      # - name: geth
      #   image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
      #   imagePullPolicy: {{ .Values.imagePullPolicy }}
      #   command: ["/bin/sh"]
      #   args:
      #   - "-c"
      #   - |-
      #     set -euo pipefail
      #     cp /var/geth/static-nodes.json /root/.celo/static-nodes.json

      #     #ACCOUNT_ADDRESS=`cat /root/.celo/address`
      #     ACCOUNT_ADDRESS=$(awk '{print $1}' /root/.celo/address | paste -s -d, -)
      #     PASSWORD=$(cat /root/.celo/account/accountSecret)
      #     for thread in $(seq 0 {{ sub .Values.threads 1 | default "0" }}); do
      #       echo $PASSWORD >> /passwords.txt
      #     done

      #     geth \
      #     --rpc \
      #     --rpcapi=eth,web3,debug,admin,personal,net \
      #     --allow-insecure-unlock \
      #     --rpcvhosts=* \
      #     --networkid={{ .Values.geth.networkID }} \
      #     --nodekey=/root/.celo/pkey1 \
      #     --syncmode=lightest \
      #     --consoleformat=json \
      #     --consoleoutput=stdout \
      #     --verbosity={{ .Values.geth.verbosity }} \
      #     --unlock=$ACCOUNT_ADDRESS \
      #     --allow-insecure-unlock \
      #     --password=/passwords.txt
      #   ports:
      #   - name: discovery-udp
      #     containerPort: 30303
      #     protocol: UDP
      #   - name: discovery-tcp
      #     containerPort: 30303
      #   - name: rpc
      #     containerPort: 8545
      #   - name: ws
      #     containerPort: 8546
      #   resources:
      #     requests:
      #       memory: 250Mi
      #       cpu: 40m
      #   volumeMounts:
      #   - name: data
      #     mountPath: /root/.celo
      #   - name: config
      #     mountPath: /var/geth
      #   - name: account
      #     mountPath: "/root/.celo/account"
      #     readOnly: true
{{ range $index, $e := until (.Values.threads | int) }}
      - name: geth-{{ $index }}
        image: {{ $.Values.geth.image.repository }}:{{ $.Values.geth.image.tag }}
        imagePullPolicy: {{ $.Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args:
        - "-c"
        - |-
          set -euo pipefail
          cp -rp /root/.celo_share /root/.celo
          cp /var/geth/static-nodes.json /root/.celo/static-nodes.json

          ACCOUNT_ADDRESS=$(awk 'NR=={{ add $index 1 }}' /root/.celo/address)
          PASSWORD=$(cat /root/.celo/account/accountSecret)

          geth \
          --rpc \
          --rpcapi=eth,web3,debug,admin,personal,net \
          --allow-insecure-unlock \
          --rpcvhosts=* \
          --networkid={{ $.Values.geth.networkID }} \
          --nodekey=/root/.celo/pkey{{ $index }} \
          --syncmode=lightest \
          --consoleformat=json \
          --consoleoutput=stdout \
          --verbosity={{ $.Values.geth.verbosity }} \
          --unlock=$ACCOUNT_ADDRESS \
          --allow-insecure-unlock \
          --password=/root/.celo/account/accountSecret \
          --port {{ add 30303 $index }} \
          --rpcport {{ add 8545 $index }}
        resources:
          requests:
            memory: 100Mi
            cpu: 25m
        volumeMounts:
        - name: data
          mountPath: /root/.celo_share
          readOnly: true
        - name: config
          mountPath: /var/geth
        - name: account
          mountPath: "/root/.celo_share/account"
          readOnly: true
{{ end }}
      - name: simulate-client
        image: {{ .Values.celotool.image.repository }}:{{ .Values.celotool.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
          - bash
          - "-c"
          - |
            RID=`cat /root/.celo/rid`

            # Send the txs to the next load test client
            RECIPIENT_INDEX=$(( ($RID + 1) % {{ .Values.replicas }} ))

            celotooljs.sh geth simulate-client \
              --index $RID \
              --recipient-index $RECIPIENT_INDEX \
              --delay {{ .Values.delay }} \
              --mnemonic "$MNEMONIC" \
              --blockscout-url {{ .Values.blockscout.url }} \
              --blockscoutMeasurePercent {{ .Values.blockscout.measurePercent }} \
              --client-count {{ .Values.threads | default "1" }}
        resources:
          requests:
            memory: 256Mi
            cpu: 5m
        env:
        - name: MNEMONIC
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment }}-load-test
              key: mnemonic
        volumeMounts:
        - name: data
          mountPath: /root/.celo
      volumes:
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: {{ .Values.environment }}-load-test-config
      - name: account
        secret:
          secretName: {{ .Values.environment }}-load-test

apiVersion: v1
kind: Service
metadata:
  name: {{ template "name" . }}
  labels:
{{ include "labels" . | indent 4 }}
{{ include "komenci-relayer-component-label" . | indent 4 }}
spec:
  clusterIP: None
  selector:
{{ include "komenci-relayer-component-label" . | indent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "name" . }}
  labels:
{{ include "labels" . | indent 4 }}
{{ include "komenci-relayer-component-label" . | indent 4 }}
spec:
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  replicas: {{ .Values.relayer.replicas }}
  serviceName: relayer
  selector:
    matchLabels:
{{ include "labels" . | indent 6 }}
{{ include "komenci-relayer-component-label" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "labels" . | indent 8 }}
{{ include "komenci-relayer-component-label" . | indent 8 }}
      annotations:
{{ if .Values.relayer.metrics.enabled }}
{{ include "metric-annotations" . | indent 8 }}
{{ end }}
    spec:
      initContainers:
      - name: set-label
        image: {{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}
        command:
        - /bin/bash
        - -c
        args:
        - |
          RID=${POD_NAME##*-}
          TOKEN_ENV_VAR_NAME="TOKEN_$RID"
          kubectl \
          --namespace "$POD_NAMESPACE" \
          --server="https://kubernetes.default.svc" \
          --token="${!TOKEN_ENV_VAR_NAME}" \
          --certificate-authority="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt" \
          label pod "$POD_NAME" \
          --overwrite \
          "aadpodidbinding=$POD_NAME-identity-binding"
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{ range $index, $e := .Values.kube.serviceAccountSecretNames }}
        - name: TOKEN_{{ $index }}
          valueFrom:
            secretKeyRef:
              key: token
              name: {{ $e }}
        {{ end }}
      containers:
      - name: komenci-relayer
        image: {{ .Values.relayer.image.repository }}:{{ .Values.relayer.image.tag }}
        imagePullPolicy: Always
        ports:
          - name: prometheus
            containerPort: {{ .Values.relayer.metrics.prometheusPort }}
        command:
          - bash
          - "-c"
          - |
            [[ $REPLICA_NAME =~ -([0-9]+)$ ]] || exit 1
            RID=${BASH_REMATCH[1]}

            # Set the private key path. If Azure HSM signing is specified,
            # it will take precedence.
            export PRIVATE_KEY_PATH="/private-keys/private-key-$RID"

            # Get the correct key vault name. If this relayer's identity is not
            # using Azure HSM signing, the key vault name will be empty and ignored
            AZURE_KEY_VAULT_NAMES={{- range $index, $identity := .Values.relayer.identities -}}{{- if (hasKey $identity "azure" ) -}}{{ $identity.azure.keyVaultName | default "" }}{{- end }},{{- end }}
            export AZURE_KEY_VAULT_NAME=`echo -n $AZURE_KEY_VAULT_NAMES | cut -d ',' -f $((RID + 1))`

            # Get the correct relayer account address
            ADDRESSES={{- range $index, $identity := .Values.relayer.identities -}}{{ $identity.address }},{{- end }}
            export ADDRESS=`echo -n $ADDRESSES | cut -d ',' -f $((RID + 1))`

            exec yarn start
        env:
        - name: REPLICA_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
{{ include "common.env-var" (dict "name" "AGGREGATION_PERIOD" "dict" .Values.relayer.aggregation.trades "value_name" "periodMs" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "AGGREGATION_SCALING_RATE" "dict" .Values.relayer.aggregation.trades "value_name" "scalingRate" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "ALLOW_NOT_CGLD" "dict" .Values.relayer "value_name" "allowNotCGLD") | indent 8 }}
{{ include "common.env-var" (dict "name" "API_REQUEST_TIMEOUT" "dict" .Values.relayer "value_name" "apiRequestTimeoutMs" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "AZURE_HSM_INIT_TRY_COUNT" "dict" .Values.relayer.azureHsm "value_name" "initTryCount") | indent 8 }}
{{ include "common.env-var" (dict "name" "AZURE_HSM_INIT_MAX_RETRY_BACKOFF_MS" "dict" .Values.relayer.azureHsm "value_name" "initMaxRetryBackoffMs") | indent 8 }}
{{ include "common.env-var" (dict "name" "BASE_CURRENCY" "dict" .Values.relayer "value_name" "baseCurrency" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "CIRCUIT_BREAKER_PRICE_CHANGE_THRESHOLD" "dict" .Values.relayer "value_name" "circuitBreakerPriceChangeThreshold") | indent 8 }}
{{ include "common.env-var" (dict "name" "DATA_FETCH_FREQUENCY" "dict" .Values.relayer.aggregation.trades "value_name" "dataFetchFrequency" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "EXCHANGES" "dict" .Values.relayer "value_name" "exchanges") | indent 8 }}
{{ include "common.env-var" (dict "name" "HTTP_RPC_PROVIDER_URL" "dict" .Values.relayer.rpcProviderUrls "value_name" "http") | indent 8 }}
{{ include "common.env-var" (dict "name" "MAX_BLOCK_TIMESTAMP_AGE_MS" "dict" .Values.relayer "value_name" "maxBlockTimestampAgeMs" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "METRICS" "dict" .Values.relayer.metrics "value_name" "enabled") | indent 8 }}
{{ include "common.env-var" (dict "name" "MID_AGGREGATION_ASK_MAX_PERCENTAGE_DEVIATION" "dict" .Values.relayer.aggregation.mid "value_name" "askMaxPercentageDeviation" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "MID_AGGREGATION_BID_MAX_PERCENTAGE_DEVIATION" "dict" .Values.relayer.aggregation.mid "value_name" "bidMaxPercentageDeviation" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "MID_AGGREGATION_MAX_EXCHANGE_VOLUME_SHARE" "dict" .Values.relayer.aggregation.mid "value_name" "maxExchangeVolumeShare" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "MID_AGGREGATION_MAX_PERCENTAGE_BID_ASK_SPREAD" "dict" .Values.relayer.aggregation.mid "value_name" "maxPercentageBidAskSpread" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "MIN_REPORT_PRICE_CHANGE_THRESHOLD" "dict" .Values.relayer.reporter.blockBased "value_name" "minReportPriceChangeThreshold" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "MINIMUM_DATA" "dict" .Values.relayer.aggregation.trades "value_name" "minimumTrades" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "OVERRIDE_INDEX" "dict" .Values.relayer "value_name" "overrideIndex" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "OVERRIDE_ORACLE_COUNT" "dict" .Values.relayer "value_name" "overrideOracleCount" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "PRIVATE_KEY_PATH" "dict" .Values.relayer "value_name" "privateKeyPath" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "PROMETHEUS_PORT" "dict" .Values.relayer.metrics "value_name" "prometheusPort") | indent 8 }}
{{ include "common.env-var" (dict "name" "QUOTE_CURRENCY" "dict" .Values.relayer "value_name" "quoteCurrency" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "REMOVE_EXPIRED_FREQUENCY" "dict" .Values.relayer.reporter.timer "value_name" "removeExpiredFrequencyMs" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "REMOVE_EXPIRED_OFFSET_OVERRIDE" "dict" .Values.relayer.reporter.timer "value_name" "removeExpiredOffsetOverride" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "REPORT_FREQUENCY_OVERRIDE" "dict" .Values.relayer.reporter.timer "value_name" "removeFrequencyOverride" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "REPORT_OFFSET_OVERRIDE" "dict" .Values.relayer.reporter.timer "value_name" "reportOffsetOverride" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "REPORT_STRATEGY" "dict" .Values.relayer "value_name" "reportStrategy") | indent 8 }}
{{ include "common.env-var" (dict "name" "TARGET_MAX_HEARTBEAT_PERIOD_MS" "dict" .Values.relayer.reporter.blockBased "value_name" "targetMaxHeartbeatPeriodMs" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "TOKEN" "dict" .Values.relayer "value_name" "token" "optional" true) | indent 8 }}
{{ include "common.env-var" (dict "name" "UNUSED_ORACLE_ADDRESSES" "dict" .Values.relayer "value_name" "unusedOracleAddresses") | indent 8 }}
{{ include "common.env-var" (dict "name" "WS_RPC_PROVIDER_URL" "dict" .Values.relayer.rpcProviderUrls "value_name" "ws") | indent 8 }}
        readinessProbe:
          exec:
            command:
            - /celo-relayer/readinessProbe.sh
            - "{{ .Values.relayer.metrics.prometheusPort }}"
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: private-key-volume
          readOnly: true
          mountPath: "/private-keys"
      volumes:
        - name: private-key-volume
          secret:
            secretName: pkey-secret
